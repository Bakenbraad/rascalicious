{"nodeToLocsJSON": [{"node" : "catch(parameter(simpleType(simpleName('Throwable')),'e',0),block([if(infix(simpleName('raFile'),'!=',null()),try(block([expressionStatement(methodCall(false,simpleName('raFile'),'close',[]))]),[catch(parameter(simpleType(simpleName('Exception')),'e2',0),block([expressionStatement(methodCall(false,simpleName('DriverManager'),'println',[methodCall(false,simpleName('e2'),'toString',[])]))]))])),throw(methodCall(false,simpleName('SmallSQLException'),'createFromException',[simpleName('e')]))]))","locs" :["/src/smallsql/database/IndexDescription.java|186,9|194,9","/src/smallsql/database/TableView.java|105,3|113,3"], "nodesize": "7"}, {"node" : "while(infix(infix(simpleName('oldValue'),'!=',null()),'&&',methodCall(false,simpleName('rs'),'next',[])),block([declarationStatement(variables(simpleType(simpleName('String')),[variable('newValue',0,methodCall(false,simpleName('rs'),'getString',[stringLiteral(' 'v '')]))])),if(infix(simpleName('newValue'),'!=',null()),block([expressionStatement(methodCall(false,'assertTrue',[infix(methodCall(false,simpleName('oldValue'),'compareTo',[simpleName('newValue')]),' >',number('0'))])),expressionStatement(postfix(simpleName('count'),'++'))])),expressionStatement(assignment(simpleName('oldValue'),'=',simpleName('newValue')))]))","locs" : ["/src/smallsql/junit/TestOrderBy.java|211,2|218,3","/src/smallsql/junit/TestOrderBy.java|239,2|246,3"], "nodesize": "6"}, {"node" : "if(infix(methodCall(false,simpleName('serializeConnections'),'size',[]),' >',number('0')),block([declarationStatement(variables(simpleType(simpleName('Iterator')),[variable('values',0,methodCall(false,methodCall(false,simpleName('locks'),'values',[]),'iterator',[]))])),while(methodCall(false,simpleName('values'),'hasNext',[]),block([declarationStatement(variables(simpleType(simpleName('TableStorePage')),[variable('lock',0,cast(simpleType(simpleName('TableStorePage')),methodCall(false,simpleName('values'),'next',[])))])),if(infix(qualifiedName(simpleName('lock'),simpleName('con')),'!=',simpleName('con')),return(null()))]))]))","locs" : ["/src/smallsql/database/Table.java|370,6|376,7","/src/smallsql/database/Table.java|388,20|394,21"], "nodesize": "5"}, {"node" : "method(simpleType(simpleName('String')),'getString',[],[simpleName('Exception')],block([declarationStatement(variables(simpleType(simpleName('Object')),[variable('obj',0,methodCall(false,'getObject',[]))])),if(infix(simpleName('obj'),'==',null()),return(null())),return(methodCall(false,simpleName('obj'),'toString',[]))]))","locs" : ["/src/smallsql/database/ExpressionFunctionFloor.java|46,4|50,5","/src/smallsql/database/ExpressionFunctionReturnFloat.java|76,1|80,5","/src/smallsql/database/ExpressionFunctionAbs.java|104,4|108,5"], "nodesize": "4"}, {"node" : "method(void(),'tearDown',[],[],block([try(block([expressionStatement(methodCall(false,'dropTable',[methodCall(false,simpleName('AllTests'),'getConnection',[]),simpleName('table')]))]),[catch(parameter(simpleType(simpleName('SQLException')),'ex',0),block([expressionStatement(methodCall(false,simpleName('ex'),'printStackTrace',[]))]))])]))","locs" : ["/src/smallsql/junit/TestAlterTable.java|39,4|45,5","/src/smallsql/junit/TestAlterTable2.java|20,4|26,5"], "nodesize": "5"}, {"node" : "try(block([expressionStatement(assignment(simpleName('value'),'=',methodCall(false,simpleName('Integer'),'parseInt',[methodCall(false,simpleName('token'),'getName',[simpleName('sql')])])))]),[catch(parameter(simpleType(simpleName('Exception')),'e',0),block([throw(methodCall(false,'createSyntaxError',[simpleName('token'),simpleName('MISSING_NUMBERVALUE')]))]))])","locs" : ["/src/smallsql/database/SQLParser.java|839,5|843,6","/src/smallsql/database/SQLParser.java|849,6|853,7"], "nodesize": "4"}, {"node" : "class('TestValue',[],[],[field(simpleType(simpleName('String')),[variable('dataType',0)]),field(simpleType(simpleName('Object')),[variable('small',0)]),field(simpleType(simpleName('Object')),[variable('large',0)])])","locs" : ["/src/smallsql/junit/TestJoins.java|212,4|216,5","/src/smallsql/junit/TestOperatoren.java|275,4|279,5"], "nodesize": "4"}, {"node" : "method(void(),'tearDown',[],[],block([try(block([declarationStatement(variables(simpleType(simpleName('Connection')),[variable('con',0,methodCall(false,simpleName('AllTests'),'getConnection',[]))])),declarationStatement(variables(simpleType(simpleName('Statement')),[variable('st',0,methodCall(false,simpleName('con'),'createStatement',[]))])),expressionStatement(methodCall(false,simpleName('st'),'execute',[infix(stringLiteral(' 'drop table  ''),'+',simpleName('table'))])),expressionStatement(methodCall(false,simpleName('st'),'close',[]))]),[catch(parameter(simpleType(simpleName('Throwable')),'e',0),block([]))])]))","locs" : ["/src/smallsql/junit/TestDataTypes.java|68,4|77,5","/src/smallsql/junit/TestOperatoren.java|95,4|104,5","/src/smallsql/junit/TestFunctions.java|374,4|383,5","/src/smallsql/junit/TestMoneyRounding.java|53,4|62,5"], "nodesize": "7"}, {"node" : "method(boolean(),'string2boolean',[parameter(simpleType(simpleName('String')),'val',0)],[],block([try(block([return(infix(methodCall(false,simpleName('Double'),'parseDouble',[simpleName('val')]),'!=',number('0')))]),[catch(parameter(simpleType(simpleName('NumberFormatException')),'e',0),block([]))]),return(infix(infix(methodCall(false,stringLiteral(' 'true ''),'equalsIgnoreCase',[simpleName('val')]),'||',methodCall(false,stringLiteral(' 'yes ''),'equalsIgnoreCase',[simpleName('val')])),'||',methodCall(false,stringLiteral(' 't ''),'equalsIgnoreCase',[simpleName('val')])))]))","locs" : ["/src/smallsql/database/Utils.java|317,4|322,5","/src/smallsql/junit/BasicTestCase.java|188,4|196,5"], "nodesize": "5"}, {"node" : "declarationStatement(variables(arrayType(simpleType(simpleName('Object'))),[variable('params',0,arrayInitializer([methodCall(false,simpleName('SQLTokenizer'),'getKeyWord',[simpleName('dataType')]),methodCall(false,simpleName('SQLTokenizer'),'getKeyWord',[methodCall(false,'getFunction',[])])]))]))","locs" : ["/src/smallsql/database/ExpressionFunction.java|106,2|109,4","/src/smallsql/database/ExpressionFunction.java|118,5|121,7"], "nodesize": "4"}, {"node" : "block([declarationStatement(variables(int(),[variable('idx',0,methodCall(false,simpleName('internalExpressions'),'indexOf',[simpleName('expr')]))])),if(infix(simpleName('idx'),' >=',number('0')),return(simpleName('idx'))),expressionStatement(methodCall(false,simpleName('internalExpressions'),'add',[simpleName('expr')])),return(infix(methodCall(false,simpleName('internalExpressions'),'size',[]),'-',number('1')))])","locs" : ["/src/smallsql/database/GroupResult.java|89,7|94,3","/src/smallsql/database/GroupResult.java|111,36|116,3"], "nodesize": "4"}, {"node" : "while(methodCall(false,simpleName('rs'),'next',[]),block([declarationStatement(variables(simpleType(simpleName('String')),[variable('newValue',0,methodCall(false,simpleName('rs'),'getString',[stringLiteral(' 'v '')]))])),expressionStatement(methodCall(false,'assertTrue',[infix(methodCall(false,simpleName('oldValue'),'compareTo',[simpleName('newValue')]),' <',number('0'))])),expressionStatement(assignment(simpleName('oldValue'),'=',simpleName('newValue'))),expressionStatement(postfix(simpleName('count'),'++'))]))","locs" : ["/src/smallsql/junit/TestOrderBy.java|187,2|192,3","/src/smallsql/junit/TestOrderBy.java|811,2|816,3"], "nodesize": "5"}, {"node" : "method(simpleType(simpleName('String')),'bytes2hex',[parameter(arrayType(byte()),'bytes',0)],[],block([declarationStatement(variables(simpleType(simpleName('StringBuffer')),[variable('buf',0,newObject(simpleType(simpleName('StringBuffer')),[infix(qualifiedName(simpleName('bytes'),simpleName('length')),' < <',number('1'))]))])),for([declarationExpression(variables(int(),[variable('i',0,number('0'))]))],infix(simpleName('i'),' <',qualifiedName(simpleName('bytes'),simpleName('length'))),[postfix(simpleName('i'),'++')],block([expressionStatement(methodCall(false,simpleName('buf'),'append',[arrayAccess(simpleName('digits'),infix(bracket(infix(arrayAccess(simpleName('bytes'),simpleName('i')),' > >',number('4'))),'&',number('0x0F')))])),expressionStatement(methodCall(false,simpleName('buf'),'append',[arrayAccess(simpleName('digits'),infix(bracket(arrayAccess(simpleName('bytes'),simpleName('i'))),'&',number('0x0F')))]))])),return(methodCall(false,simpleName('buf'),'toString',[]))]))","locs" : ["/src/smallsql/database/Utils.java|205,4|212,5","/src/smallsql/junit/BasicTestCase.java|102,1|109,2"], "nodesize": "6"}, {"node" : "try(block([declarationStatement(variables(int(),[variable('maxRows',0,methodCall(false,simpleName('Integer'),'parseInt',[methodCall(false,simpleName('token'),'getName',[simpleName('sql')])]))])),expressionStatement(methodCall(false,simpleName('selCmd'),'setMaxRows',[simpleName('maxRows')]))]),[catch(parameter(simpleType(simpleName('NumberFormatException')),'e',0),block([throw(methodCall(false,'createSyntaxError',[simpleName('token'),qualifiedName(simpleName('Language'),simpleName('STXADD_NOT_NUMBER')),methodCall(false,simpleName('token'),'getName',[simpleName('sql')])]))]))])","locs" : ["/src/smallsql/database/SQLParser.java|352,5|357,6","/src/smallsql/database/SQLParser.java|1932,8|1937,9"], "nodesize": "5"}, {"node" : "try(block([expressionStatement(methodCall(false,simpleName('rs'),'getString',[stringLiteral(' 'v '')])),expressionStatement(methodCall(false,'fail',[stringLiteral(' 'SQLException  'No current row ' should be throw '')]))]),[catch(parameter(simpleType(simpleName('SQLException')),'ex',0),block([expressionStatement(methodCall(false,'assertSQLException',[stringLiteral(' '01000 ''),number('0'),simpleName('ex')]))]))])","locs" : ["/src/smallsql/junit/TestScrollable.java|67,8|72,9","/src/smallsql/junit/TestScrollable.java|99,8|104,9","/src/smallsql/junit/TestScrollable.java|135,8|140,9","/src/smallsql/junit/TestScrollable.java|173,8|178,9"], "nodesize": "5"}, {"node" : "if(infix(simpleName('places'),' >',number('0')),block([expressionStatement(assignment(simpleName('value'),'/=',simpleName('factor')))]),block([expressionStatement(assignment(simpleName('value'),'*=',simpleName('factor')))]))","locs" : ["/src/smallsql/database/ExpressionFunctionRound.java|62,2|66,3","/src/smallsql/database/ExpressionFunctionTruncate.java|62,2|66,3"], "nodesize": "4"}, {"node" : "block([try(block([expressionStatement(methodCall(false,methodCall(false,simpleName('con'),'createStatement',[]),'execute',[stringLiteral(' 'Drop Table transactions '')]))]),[catch(parameter(simpleType(simpleName('Throwable')),'e',0),block([expressionStatement(methodCall(false,simpleName('e'),'printStackTrace',[]))]))]),expressionStatement(methodCall(false,simpleName('con'),'setAutoCommit',[booleanLiteral(true)]))])","locs" : ["/src/smallsql/junit/TestTransactions.java|98,10|103,3","/src/smallsql/junit/TestTransactions.java|129,10|134,3","/src/smallsql/junit/TestTransactions.java|157,10|162,3","/src/smallsql/junit/TestTransactions.java|188,10|193,3","/src/smallsql/junit/TestTransactions.java|281,10|286,3","/src/smallsql/junit/TestTransactions.java|365,10|370,3"], "nodesize": "4"}, {"node" : "if(infix(qualifiedName(simpleName('num'),simpleName('scale')),' <',simpleName('scale')),block([expressionStatement(methodCall(false,simpleName('num'),'setScale',[simpleName('scale')]))]),if(infix(qualifiedName(simpleName('num'),simpleName('scale')),' >',simpleName('scale')),block([expressionStatement(methodCall(false,'setScale',[qualifiedName(simpleName('num'),simpleName('scale'))]))])))","locs" : ["/src/smallsql/database/MutableNumeric.java|167,2|172,3","/src/smallsql/database/MutableNumeric.java|235,2|240,3"], "nodesize": "5"}, {"node" : "if(infix(simpleName('count'),'==',number('0')),block([expressionStatement(methodCall(false,'createTestDataWithClassicInsert',[simpleName('con')])),expressionStatement(assignment(simpleName('rs'),'=',methodCall(false,simpleName('st1'),'executeQuery',[infix(stringLiteral(' 'SELECT count(*) FROM  ''),'+',simpleName('tableName'))]))),expressionStatement(methodCall(false,simpleName('rs'),'next',[])),expressionStatement(assignment(simpleName('count'),'=',methodCall(false,simpleName('rs'),'getInt',[number('1')])))]))","locs" : ["/src/smallsql/junit/BenchTest.java|208,16|214,17","/src/smallsql/junit/BenchTest.java|322,16|328,17"], "nodesize": "5"}, {"node" : "if(infix(infix(simpleName('token2'),'!=',null()),'&&',infix(qualifiedName(simpleName('token2'),simpleName('value')),'==',qualifiedName(simpleName('SQLTokenizer'),simpleName('POINT')))),block([expressionStatement(methodCall(false,simpleName('expr'),'setNameAfterTableAlias',[methodCall(false,'nextIdentifier',[])]))]),block([expressionStatement(methodCall(false,'previousToken',[]))]))","locs" : ["/src/smallsql/database/SQLParser.java|1239,24|1243,25","/src/smallsql/database/SQLParser.java|1332,32|1336,33"], "nodesize": "4"}, {"node" : "block([if(methodCall(false,simpleName('expr'),'isNull',[]),expressionStatement(assignment(simpleName('dataType'),'=',methodCall(false,simpleName('expr'),'getDataType',[]))),expressionStatement(methodCall(false,'initValue',[simpleName('expr')])))])","locs" : ["/src/smallsql/database/ExpressionValue.java|154,21|159,5","/src/smallsql/database/ExpressionValue.java|211,21|216,5"], "nodesize": "4"}, {"node" : "block([try(block([declarationStatement(variables(simpleType(simpleName('Expression')),[variable('expr',0,methodCall(false,'getValue',[simpleName('i')]))])),expressionStatement(assignment(simpleName('wasNull'),'=',methodCall(false,simpleName('expr'),'isNull',[]))),return(methodCall(false,simpleName('expr'),'getLong',[]))]),[catch(parameter(simpleType(simpleName('Exception')),'e',0),block([throw(methodCall(false,simpleName('SmallSQLException'),'createFromException',[simpleName('e')]))]))])])","locs" : ["/src/smallsql/database/SSCallableStatement.java|117,51|125,5","/src/smallsql/database/SSCallableStatement.java|135,55|143,5"], "nodesize": "6"}, {"node" : "block([declarationStatement(variables(simpleType(simpleName('Iterator')),[variable('values',0,methodCall(false,methodCall(false,simpleName('locks'),'values',[]),'iterator',[]))])),while(methodCall(false,simpleName('values'),'hasNext',[]),block([declarationStatement(variables(simpleType(simpleName('TableStorePage')),[variable('lock',0,cast(simpleType(simpleName('TableStorePage')),methodCall(false,simpleName('values'),'next',[])))])),if(infix(qualifiedName(simpleName('lock'),simpleName('con')),'!=',simpleName('con')),return(null()))]))])","locs" : ["/src/smallsql/database/Table.java|358,26|364,7","/src/smallsql/database/Table.java|370,41|376,7","/src/smallsql/database/Table.java|388,55|394,21"], "nodesize": "4"}, {"node" : "if(infix(simpleName('places'),' >',number('0')),block([for([declarationExpression(variables(int(),[variable('i',0,number('0'))]))],infix(simpleName('i'),' <',simpleName('places')),[postfix(simpleName('i'),'++')],block([expressionStatement(assignment(simpleName('factor'),'*=',number('10')))])),expressionStatement(assignment(simpleName('value'),'*=',simpleName('factor')))]),block([for([declarationExpression(variables(int(),[variable('i',0,number('0'))]))],infix(simpleName('i'),' >',simpleName('places')),[postfix(simpleName('i'),'--')],block([expressionStatement(assignment(simpleName('factor'),'*=',number('10')))])),expressionStatement(assignment(simpleName('value'),'/=',simpleName('factor')))]))","locs" : ["/src/smallsql/database/ExpressionFunctionRound.java|50,2|60,3","/src/smallsql/database/ExpressionFunctionTruncate.java|50,2|60,3"], "nodesize": "8"}, {"node" : "if(infix(qualifiedName(simpleName('status'),simpleName('nodeValue')),'!=',null()),block([if(instanceof(qualifiedName(simpleName('status'),simpleName('nodeValue')),simpleType(simpleName('IndexNode'))),block([expressionStatement(postfix(simpleName('level'),'++')),expressionStatement(methodCall(false,simpleName('nodeStack'),'push',[newObject(simpleType(simpleName('IndexNodeScrollStatus')),[cast(simpleType(simpleName('IndexNode')),qualifiedName(simpleName('status'),simpleName('nodeValue'))),bracket(infix(methodCall(false,methodCall(false,simpleName('expressions'),'get',[simpleName('level')]),'getAlias',[]),'!=',qualifiedName(simpleName('SQLTokenizer'),simpleName('DESC_STR')))),simpleName('scroll'),simpleName('level')])])),continue()]),return(methodCall(false,'getReturnValue',[qualifiedName(simpleName('status'),simpleName('nodeValue'))])))]))","locs" : ["/src/smallsql/database/IndexScrollStatus.java|89,5|99,6","/src/smallsql/database/IndexScrollStatus.java|120,5|131,41"], "nodesize": "10"}, {"node" : "if(infix(infix(simpleName('i'),'+',number('1')),'==',simpleName('count')),return(methodCall(false,simpleName('page'),'getValue',[])),expressionStatement(assignment(simpleName('page'),'=',cast(simpleType(simpleName('IndexNode')),methodCall(false,simpleName('page'),'getValue',[])))))","locs" : ["/src/smallsql/database/Index.java|103,12|106,50","/src/smallsql/database/Index.java|130,12|133,50"], "nodesize": "4"}, {"node" : "while(methodCall(false,simpleName('rs'),'next',[]),block([expressionStatement(methodCall(false,'assertTrue',[infix(methodCall(false,simpleName('oldValue'),'compareTo',[cast(simpleType(simpleName('Integer')),methodCall(false,simpleName('rs'),'getObject',[stringLiteral(' 'i '')]))]),' <',number('0'))])),expressionStatement(assignment(simpleName('oldValue'),'=',cast(simpleType(simpleName('Integer')),methodCall(false,simpleName('rs'),'getObject',[stringLiteral(' 'i '')])))),expressionStatement(postfix(simpleName('count'),'++'))]))","locs" : ["/src/smallsql/junit/TestOrderBy.java|346,2|350,3","/src/smallsql/junit/TestOrderBy.java|431,2|435,3"], "nodesize": "4"}, {"node" : "method(simpleType(simpleName('TestValue')),'a',[parameter(simpleType(simpleName('String')),'dataType',0),parameter(simpleType(simpleName('Object')),'small',0),parameter(simpleType(simpleName('Object')),'large',0)],[],block([declarationStatement(variables(simpleType(simpleName('TestValue')),[variable('value',0,newObject(simpleType(simpleName('TestValue')),[]))])),expressionStatement(assignment(qualifiedName(simpleName('value'),simpleName('dataType')),'=',simpleName('dataType'))),expressionStatement(assignment(qualifiedName(simpleName('value'),simpleName('small')),'=',simpleName('small'))),expressionStatement(assignment(qualifiedName(simpleName('value'),simpleName('large')),'=',simpleName('large'))),return(simpleName('value'))]))","locs" : ["/src/smallsql/junit/TestJoins.java|204,4|210,5","/src/smallsql/junit/TestOperatoren.java|267,4|273,5"], "nodesize": "6"}] }