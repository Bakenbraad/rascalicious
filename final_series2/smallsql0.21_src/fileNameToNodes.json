{"fileNameToNodes": [{"filename" : "smallsql021_src.src.smallsql.database.ExpressionFunctionReturnString", "nodes" : ["method(float(),'getFloat',[],[simpleName('Exception')],block([if(methodCall(false,'isNull',[]),return(number('0'))),return(methodCall(false,simpleName('Float'),'parseFloat',[methodCall(false,methodCall(false,'getString',[]),'trim',[])]))]))","method(boolean(),'getBoolean',[],[simpleName('Exception')],block([if(methodCall(false,'isNull',[]),return(booleanLiteral(false))),return(methodCall(false,simpleName('Utils'),'string2boolean',[methodCall(false,methodCall(false,'getString',[]),'trim',[])]))]))","method(long(),'getLong',[],[simpleName('Exception')],block([if(methodCall(false,'isNull',[]),return(number('0'))),return(methodCall(false,simpleName('Long'),'parseLong',[methodCall(false,methodCall(false,'getString',[]),'trim',[])]))]))","method(long(),'getMoney',[],[simpleName('Exception')],block([if(methodCall(false,'isNull',[]),return(number('0'))),return(methodCall(false,simpleName('Money'),'parseMoney',[methodCall(false,methodCall(false,'getString',[]),'trim',[])]))]))","method(int(),'getInt',[],[simpleName('Exception')],block([if(methodCall(false,'isNull',[]),return(number('0'))),return(methodCall(false,simpleName('Integer'),'parseInt',[methodCall(false,methodCall(false,'getString',[]),'trim',[])]))]))","method(double(),'getDouble',[],[simpleName('Exception')],block([if(methodCall(false,'isNull',[]),return(number('0'))),return(methodCall(false,simpleName('Double'),'parseDouble',[methodCall(false,methodCall(false,'getString',[]),'trim',[])]))]))","method(simpleType(simpleName('MutableNumeric')),'getNumeric',[],[simpleName('Exception')],block([if(methodCall(false,'isNull',[]),return(null())),return(newObject(simpleType(simpleName('MutableNumeric')),[methodCall(false,methodCall(false,'getString',[]),'trim',[])]))]))"]}, {"filename" : "smallsql021_src.src.smallsql.database.SSResultSet", "nodes" : ["if(infix(qualifiedName(simpleName('st'),simpleName('rsType')),'==',qualifiedName(simpleName('ResultSet'),simpleName('TYPE_FORWARD_ONLY'))),throw(methodCall(false,simpleName('SmallSQLException'),'create',[qualifiedName(simpleName('Language'),simpleName('RSET_FWDONLY'))])))","if(infix(qualifiedName(simpleName('st'),simpleName('rsType')),'==',qualifiedName(simpleName('ResultSet'),simpleName('TYPE_FORWARD_ONLY'))),throw(methodCall(false,simpleName('SmallSQLException'),'create',[qualifiedName(simpleName('Language'),simpleName('RSET_FWDONLY'))])))"]}, {"filename" : "smallsql021_src.src.smallsql.database.Distinct", "nodes" : ["method(void(),'beforeFirst',[],[simpleName('Exception')],block([expressionStatement(methodCall(false,simpleName('rowSource'),'beforeFirst',[])),expressionStatement(assignment(simpleName('row'),'=',number('0')))]))"]}, {"filename" : "smallsql021_src.src.smallsql.database.SQLParser", "nodes" : ["try(block([expressionStatement(assignment(simpleName('value'),'=',methodCall(false,simpleName('Integer'),'parseInt',[methodCall(false,simpleName('token'),'getName',[simpleName('sql')])])))]),[catch(parameter(simpleType(simpleName('Exception')),'e',0),block([throw(methodCall(false,'createSyntaxError',[simpleName('token'),simpleName('MISSING_NUMBERVALUE')]))]))])","try(block([expressionStatement(assignment(simpleName('value'),'=',methodCall(false,simpleName('Integer'),'parseInt',[methodCall(false,simpleName('token'),'getName',[simpleName('sql')])])))]),[catch(parameter(simpleType(simpleName('Exception')),'e',0),block([throw(methodCall(false,'createSyntaxError',[simpleName('token'),simpleName('MISSING_NUMBERVALUE')]))]))])","infix(infix(simpleName('token'),'!=',null()),'&&',infix(qualifiedName(simpleName('token'),simpleName('value')),'==',qualifiedName(simpleName('SQLTokenizer'),simpleName('POINT'))))","infix(infix(simpleName('token'),'!=',null()),'&&',infix(qualifiedName(simpleName('token'),simpleName('value')),'==',qualifiedName(simpleName('SQLTokenizer'),simpleName('POINT'))))","try(block([declarationStatement(variables(int(),[variable('maxRows',0,methodCall(false,simpleName('Integer'),'parseInt',[methodCall(false,simpleName('token'),'getName',[simpleName('sql')])]))])),expressionStatement(methodCall(false,simpleName('selCmd'),'setMaxRows',[simpleName('maxRows')]))]),[catch(parameter(simpleType(simpleName('NumberFormatException')),'e',0),block([throw(methodCall(false,'createSyntaxError',[simpleName('token'),qualifiedName(simpleName('Language'),simpleName('STXADD_NOT_NUMBER')),methodCall(false,simpleName('token'),'getName',[simpleName('sql')])]))]))])","try(block([declarationStatement(variables(int(),[variable('maxRows',0,methodCall(false,simpleName('Integer'),'parseInt',[methodCall(false,simpleName('token'),'getName',[simpleName('sql')])]))])),expressionStatement(methodCall(false,simpleName('selCmd'),'setMaxRows',[simpleName('maxRows')]))]),[catch(parameter(simpleType(simpleName('NumberFormatException')),'e',0),block([throw(methodCall(false,'createSyntaxError',[simpleName('token'),qualifiedName(simpleName('Language'),simpleName('STXADD_NOT_NUMBER')),methodCall(false,simpleName('token'),'getName',[simpleName('sql')])]))]))])","if(infix(infix(simpleName('token2'),'!=',null()),'&&',infix(qualifiedName(simpleName('token2'),simpleName('value')),'==',qualifiedName(simpleName('SQLTokenizer'),simpleName('POINT')))),block([expressionStatement(methodCall(false,simpleName('expr'),'setNameAfterTableAlias',[methodCall(false,'nextIdentifier',[])]))]),block([expressionStatement(methodCall(false,'previousToken',[]))]))","if(infix(infix(simpleName('token2'),'!=',null()),'&&',infix(qualifiedName(simpleName('token2'),simpleName('value')),'==',qualifiedName(simpleName('SQLTokenizer'),simpleName('POINT')))),block([expressionStatement(methodCall(false,simpleName('expr'),'setNameAfterTableAlias',[methodCall(false,'nextIdentifier',[])]))]),block([expressionStatement(methodCall(false,'previousToken',[]))]))","if(infix(qualifiedName(simpleName('token'),simpleName('value')),'==',qualifiedName(simpleName('SQLTokenizer'),simpleName('OUTER'))),expressionStatement(assignment(simpleName('token'),'=',methodCall(false,'nextToken',[simpleName('MISSING_JOIN')]))))","if(infix(qualifiedName(simpleName('token'),simpleName('value')),'==',qualifiedName(simpleName('SQLTokenizer'),simpleName('OUTER'))),expressionStatement(assignment(simpleName('token'),'=',methodCall(false,'nextToken',[simpleName('MISSING_JOIN')]))))","if(infix(qualifiedName(simpleName('token'),simpleName('value')),'==',qualifiedName(simpleName('SQLTokenizer'),simpleName('OUTER'))),expressionStatement(assignment(simpleName('token'),'=',methodCall(false,'nextToken',[simpleName('MISSING_JOIN')]))))","declarationStatement(variables(int(),[variable('length',0,infix(infix(qualifiedName(simpleName('last'),simpleName('offset')),'+',qualifiedName(simpleName('last'),simpleName('length'))),'-',simpleName('offset')))]))","declarationStatement(variables(int(),[variable('length',0,infix(infix(qualifiedName(simpleName('last'),simpleName('offset')),'+',qualifiedName(simpleName('last'),simpleName('length'))),'-',simpleName('offset')))]))"]}, {"filename" : "smallsql021_src.src.smallsql.database.IndexNode", "nodes" : ["expressionStatement(assignment(simpleName('value'),'=',conditional(bracket(simpleName('unique')),cast(simpleType(simpleName('Object')),newObject(simpleType(simpleName('Long')),[simpleName('rowOffset')])),newObject(simpleType(simpleName('LongTreeList')),[simpleName('rowOffset')]))))","expressionStatement(assignment(simpleName('value'),'=',conditional(bracket(simpleName('unique')),cast(simpleType(simpleName('Object')),newObject(simpleType(simpleName('Long')),[simpleName('rowOffset')])),newObject(simpleType(simpleName('LongTreeList')),[simpleName('rowOffset')]))))","declarationStatement(variables(int(),[variable('mid',0,infix(simpleName('start'),'+',infix(bracket(infix(simpleName('end'),'-',simpleName('start'))),'/',number('2'))))]))","declarationStatement(variables(int(),[variable('mid',0,infix(simpleName('start'),'+',infix(bracket(infix(simpleName('end'),'-',simpleName('start'))),'/',number('2'))))]))"]}, {"filename" : "smallsql021_src.src.smallsql.database.ExpressionFunctionInsert", "nodes" : ["if(infix(simpleName('length'),' <',number('0')),throw(methodCall(false,simpleName('SmallSQLException'),'create',[qualifiedName(simpleName('Language'),simpleName('INSERT_INVALID_LEN')),newObject(simpleType(simpleName('Integer')),[simpleName('length')])])))","if(infix(simpleName('length'),' <',number('0')),throw(methodCall(false,simpleName('SmallSQLException'),'create',[qualifiedName(simpleName('Language'),simpleName('INSERT_INVALID_LEN')),newObject(simpleType(simpleName('Integer')),[simpleName('length')])])))"]}, {"filename" : "smallsql021_src.src.smallsql.database.SSCallableStatement", "nodes" : ["block([try(block([declarationStatement(variables(simpleType(simpleName('Expression')),[variable('expr',0,methodCall(false,'getValue',[simpleName('i')]))])),expressionStatement(assignment(simpleName('wasNull'),'=',methodCall(false,simpleName('expr'),'isNull',[]))),return(methodCall(false,simpleName('expr'),'getLong',[]))]),[catch(parameter(simpleType(simpleName('Exception')),'e',0),block([throw(methodCall(false,simpleName('SmallSQLException'),'createFromException',[simpleName('e')]))]))])])","block([try(block([declarationStatement(variables(simpleType(simpleName('Expression')),[variable('expr',0,methodCall(false,'getValue',[simpleName('i')]))])),expressionStatement(assignment(simpleName('wasNull'),'=',methodCall(false,simpleName('expr'),'isNull',[]))),return(methodCall(false,simpleName('expr'),'getLong',[]))]),[catch(parameter(simpleType(simpleName('Exception')),'e',0),block([throw(methodCall(false,simpleName('SmallSQLException'),'createFromException',[simpleName('e')]))]))])])"]}, {"filename" : "smallsql021_src.src.smallsql.database.SQLTokenizer", "nodes" : ["if(prefix('!',simpleName('wasWhiteSpace')),block([expressionStatement(methodCall(false,simpleName('tokens'),'add',[newObject(simpleType(simpleName('SQLToken')),[simpleName('value'),simpleName('tokenStart'),simpleName('i')])])),expressionStatement(assignment(simpleName('value'),'=',number('0')))]))","if(prefix('!',simpleName('wasWhiteSpace')),block([expressionStatement(methodCall(false,simpleName('tokens'),'add',[newObject(simpleType(simpleName('SQLToken')),[simpleName('value'),simpleName('tokenStart'),simpleName('i')])])),expressionStatement(assignment(simpleName('value'),'=',number('0')))]))"]}, {"filename" : "smallsql021_src.src.smallsql.database.FileIndexNode", "nodes" : ["declarationStatement(variables(simpleType(simpleName('StoreImpl')),[variable('store',0,methodCall(false,simpleName('StoreImpl'),'createStore',[null(),simpleName('storePage'),qualifiedName(simpleName('SQLTokenizer'),simpleName('INSERT')),simpleName('fileOffset')]))]))","declarationStatement(variables(simpleType(simpleName('StoreImpl')),[variable('store',0,methodCall(false,simpleName('StoreImpl'),'createStore',[null(),simpleName('storePage'),qualifiedName(simpleName('SQLTokenizer'),simpleName('INSERT')),simpleName('fileOffset')]))]))","declarationStatement(variables(simpleType(simpleName('StoreImpl')),[variable('store',0,methodCall(false,simpleName('StoreImpl'),'createStore',[null(),simpleName('storePage'),qualifiedName(simpleName('SQLTokenizer'),simpleName('SELECT')),simpleName('offset')]))]))","declarationStatement(variables(simpleType(simpleName('StorePage')),[variable('storePage',0,newObject(simpleType(simpleName('StorePage')),[null(),prefix('-',number('1')),simpleName('file'),simpleName('offset')]))]))","declarationStatement(variables(simpleType(simpleName('StorePage')),[variable('storePage',0,newObject(simpleType(simpleName('StorePage')),[null(),prefix('-',number('1')),simpleName('file'),simpleName('offset')]))]))"]}, {"filename" : "smallsql021_src.src.smallsql.database.SSDatabaseMetaData", "nodes" : ["declarationStatement(variables(arrayType(simpleType(simpleName('String'))),[variable('colNames',0,arrayInitializer([stringLiteral(' 'TYPE_CAT ''),stringLiteral(' 'TYPE_SCHEM ''),stringLiteral(' 'TYPE_NAME ''),stringLiteral(' 'CLASS_NAME ''),stringLiteral(' 'DATA_TYPE ''),stringLiteral(' 'REMARKS '')]))]))","return(newObject(simpleType(simpleName('SSResultSet')),[simpleName('st'),methodCall(false,simpleName('Utils'),'createMemoryCommandSelect',[simpleName('con'),simpleName('colNames'),simpleName('data')])]))","return(newObject(simpleType(simpleName('SSResultSet')),[simpleName('st'),methodCall(false,simpleName('Utils'),'createMemoryCommandSelect',[simpleName('con'),simpleName('colNames'),simpleName('data')])]))","return(newObject(simpleType(simpleName('SSResultSet')),[simpleName('st'),methodCall(false,simpleName('Utils'),'createMemoryCommandSelect',[simpleName('con'),simpleName('colNames'),simpleName('data')])]))","return(newObject(simpleType(simpleName('SSResultSet')),[simpleName('st'),methodCall(false,simpleName('Utils'),'createMemoryCommandSelect',[simpleName('con'),simpleName('colNames'),simpleName('data')])]))","return(newObject(simpleType(simpleName('SSResultSet')),[simpleName('st'),methodCall(false,simpleName('Utils'),'createMemoryCommandSelect',[simpleName('con'),simpleName('colNames'),simpleName('data')])]))","return(newObject(simpleType(simpleName('SSResultSet')),[simpleName('st'),methodCall(false,simpleName('Utils'),'createMemoryCommandSelect',[simpleName('con'),simpleName('colNames'),simpleName('data')])]))","return(newObject(simpleType(simpleName('SSResultSet')),[simpleName('st'),methodCall(false,simpleName('Utils'),'createMemoryCommandSelect',[simpleName('con'),simpleName('colNames'),simpleName('data')])]))","return(newObject(simpleType(simpleName('SSResultSet')),[simpleName('st'),methodCall(false,simpleName('Utils'),'createMemoryCommandSelect',[simpleName('con'),simpleName('colNames'),simpleName('data')])]))","return(newObject(simpleType(simpleName('SSResultSet')),[simpleName('st'),methodCall(false,simpleName('Utils'),'createMemoryCommandSelect',[simpleName('con'),simpleName('colNames'),simpleName('data')])]))","return(newObject(simpleType(simpleName('SSResultSet')),[simpleName('st'),methodCall(false,simpleName('Utils'),'createMemoryCommandSelect',[simpleName('con'),simpleName('colNames'),simpleName('data')])]))","return(newObject(simpleType(simpleName('SSResultSet')),[simpleName('st'),methodCall(false,simpleName('Utils'),'createMemoryCommandSelect',[simpleName('con'),simpleName('colNames'),simpleName('data')])]))","return(newObject(simpleType(simpleName('SSResultSet')),[simpleName('st'),methodCall(false,simpleName('Utils'),'createMemoryCommandSelect',[simpleName('con'),simpleName('colNames'),simpleName('data')])]))","return(newObject(simpleType(simpleName('SSResultSet')),[simpleName('st'),methodCall(false,simpleName('Utils'),'createMemoryCommandSelect',[simpleName('con'),simpleName('colNames'),simpleName('data')])]))","declarationStatement(variables(arrayType(arrayType(simpleType(simpleName('Object')))),[variable('data',0,newArray(simpleType(simpleName('Object')),[number('0')]))]))","declarationStatement(variables(arrayType(arrayType(simpleType(simpleName('Object')))),[variable('data',0,newArray(simpleType(simpleName('Object')),[number('0')]))]))","declarationStatement(variables(arrayType(arrayType(simpleType(simpleName('Object')))),[variable('data',0,newArray(simpleType(simpleName('Object')),[number('0')]))]))","declarationStatement(variables(arrayType(arrayType(simpleType(simpleName('Object')))),[variable('data',0,newArray(simpleType(simpleName('Object')),[number('0')]))]))","declarationStatement(variables(arrayType(simpleType(simpleName('String'))),[variable('colNames',0,arrayInitializer([stringLiteral(' 'PROCEDURE_CAT ''),stringLiteral(' 'PROCEDURE_SCHEM ''),stringLiteral(' 'PROCEDURE_NAME ''),stringLiteral(' ' ''),stringLiteral(' ' ''),stringLiteral(' ' ''),stringLiteral(' 'REMARKS ''),stringLiteral(' 'PROCEDURE_TYPE '')]))]))","declarationStatement(variables(arrayType(simpleType(simpleName('String'))),[variable('colNames',0,arrayInitializer([stringLiteral(' 'SCOPE ''),stringLiteral(' 'COLUMN_NAME ''),stringLiteral(' 'DATA_TYPE ''),stringLiteral(' 'TYPE_NAME ''),stringLiteral(' 'COLUMN_SIZE ''),stringLiteral(' 'BUFFER_LENGTH ''),stringLiteral(' 'DECIMAL_DIGITS ''),stringLiteral(' 'PSEUDO_COLUMN '')]))]))","declarationStatement(variables(arrayType(simpleType(simpleName('String'))),[variable('colNames',0,arrayInitializer([stringLiteral(' 'SCOPE ''),stringLiteral(' 'COLUMN_NAME ''),stringLiteral(' 'DATA_TYPE ''),stringLiteral(' 'TYPE_NAME ''),stringLiteral(' 'COLUMN_SIZE ''),stringLiteral(' 'BUFFER_LENGTH ''),stringLiteral(' 'DECIMAL_DIGITS ''),stringLiteral(' 'PSEUDO_COLUMN '')]))]))","arrayInitializer([stringLiteral(' 'TABLE_CAT ''),stringLiteral(' 'TABLE_SCHEM ''),stringLiteral(' 'TABLE_NAME ''),stringLiteral(' 'NON_UNIQUE ''),stringLiteral(' 'INDEX_QUALIFIER ''),stringLiteral(' 'INDEX_NAME ''),stringLiteral(' 'TYPE ''),stringLiteral(' 'ORDINAL_POSITION ''),stringLiteral(' 'COLUMN_NAME ''),stringLiteral(' 'ASC_OR_DESC ''),stringLiteral(' 'CARDINALITY ''),stringLiteral(' 'PAGES ''),stringLiteral(' 'FILTER_CONDITION '')])","declarationStatement(variables(arrayType(simpleType(simpleName('String'))),[variable('colNames',0,arrayInitializer([stringLiteral(' 'TABLE_CAT ''),stringLiteral(' 'TABLE_SCHEM ''),stringLiteral(' 'TABLE_NAME ''),stringLiteral(' 'TABLE_TYPE ''),stringLiteral(' 'REMARKS ''),stringLiteral(' 'TYPE_CAT ''),stringLiteral(' 'TYPE_SCHEM ''),stringLiteral(' 'TYPE_NAME ''),stringLiteral(' 'SELF_REFERENCING_COL_NAME ''),stringLiteral(' 'REF_GENERATION '')]))]))","declarationStatement(variables(arrayType(simpleType(simpleName('String'))),[variable('colNames',0,arrayInitializer([stringLiteral(' 'TYPE_NAME ''),stringLiteral(' 'DATA_TYPE ''),stringLiteral(' 'PRECISION ''),stringLiteral(' 'LITERAL_PREFIX ''),stringLiteral(' 'LITERAL_SUFFIX ''),stringLiteral(' 'CREATE_PARAMS ''),stringLiteral(' 'NULLABLE ''),stringLiteral(' 'CASE_SENSITIVE ''),stringLiteral(' 'SEARCHABLE ''),stringLiteral(' 'UNSIGNED_ATTRIBUTE ''),stringLiteral(' 'FIXED_PREC_SCALE ''),stringLiteral(' 'AUTO_INCREMENT ''),stringLiteral(' 'LOCAL_TYPE_NAME ''),stringLiteral(' 'MINIMUM_SCALE ''),stringLiteral(' 'MAXIMUM_SCALE ''),stringLiteral(' 'SQL_DATA_TYPE ''),stringLiteral(' 'SQL_DATETIME_SUB ''),stringLiteral(' 'NUM_PREC_RADIX '')]))]))","declarationStatement(variables(arrayType(simpleType(simpleName('String'))),[variable('colNames',0,arrayInitializer([stringLiteral(' 'TABLE_CAT ''),stringLiteral(' 'TABLE_SCHEM ''),stringLiteral(' 'TABLE_NAME ''),stringLiteral(' 'COLUMN_NAME ''),stringLiteral(' 'DATA_TYPE ''),stringLiteral(' 'TYPE_NAME ''),stringLiteral(' 'COLUMN_SIZE ''),stringLiteral(' 'BUFFER_LENGTH ''),stringLiteral(' 'DECIMAL_DIGITS ''),stringLiteral(' 'NUM_PREC_RADIX ''),stringLiteral(' 'NULLABLE ''),stringLiteral(' 'REMARKS ''),stringLiteral(' 'COLUMN_DEF ''),stringLiteral(' 'SQL_DATA_TYPE ''),stringLiteral(' 'SQL_DATETIME_SUB ''),stringLiteral(' 'CHAR_OCTET_LENGTH ''),stringLiteral(' 'ORDINAL_POSITION ''),stringLiteral(' 'IS_NULLABLE '')]))]))","declarationStatement(variables(arrayType(simpleType(simpleName('String'))),[variable('colNames',0,arrayInitializer([stringLiteral(' 'PROCEDURE_CAT ''),stringLiteral(' 'PROCEDURE_SCHEM ''),stringLiteral(' 'PROCEDURE_NAME ''),stringLiteral(' 'COLUMN_NAME ''),stringLiteral(' 'COLUMN_TYPE ''),stringLiteral(' 'DATA_TYPE ''),stringLiteral(' 'TYPE_NAME ''),stringLiteral(' 'PRECISION ''),stringLiteral(' 'LENGTH ''),stringLiteral(' 'SCALE ''),stringLiteral(' 'RADIX ''),stringLiteral(' 'NULLABLE ''),stringLiteral(' 'REMARKS '')]))]))","declarationStatement(variables(arrayType(simpleType(simpleName('String'))),[variable('colNames',0,arrayInitializer([stringLiteral(' 'PKTABLE_CAT ''),stringLiteral(' 'PKTABLE_SCHEM ''),stringLiteral(' 'PKTABLE_NAME ''),stringLiteral(' 'PKCOLUMN_NAME ''),stringLiteral(' 'FKTABLE_CAT ''),stringLiteral(' 'FKTABLE_SCHEM ''),stringLiteral(' 'FKTABLE_NAME ''),stringLiteral(' 'FKCOLUMN_NAME ''),stringLiteral(' 'KEY_SEQ ''),stringLiteral(' 'UPDATE_RULE ''),stringLiteral(' 'DELETE_RULE ''),stringLiteral(' 'FK_NAME ''),stringLiteral(' 'PK_NAME ''),stringLiteral(' 'DEFERRABILITY '')]))]))"]}, {"filename" : "smallsql021_src.src.smallsql.junit.TestStatement", "nodes" : ["declarationStatement(variables(simpleType(simpleName('Statement')),[variable('st',0,methodCall(false,simpleName('con'),'createStatement',[qualifiedName(simpleName('ResultSet'),simpleName('TYPE_SCROLL_SENSITIVE')),qualifiedName(simpleName('ResultSet'),simpleName('CONCUR_UPDATABLE'))]))]))"]}, {"filename" : "smallsql021_src.src.smallsql.database.IndexDescription", "nodes" : ["catch(parameter(simpleType(simpleName('Throwable')),'e',0),block([if(infix(simpleName('raFile'),'!=',null()),try(block([expressionStatement(methodCall(false,simpleName('raFile'),'close',[]))]),[catch(parameter(simpleType(simpleName('Exception')),'e2',0),block([expressionStatement(methodCall(false,simpleName('DriverManager'),'println',[methodCall(false,simpleName('e2'),'toString',[])]))]))])),throw(methodCall(false,simpleName('SmallSQLException'),'createFromException',[simpleName('e')]))]))","infix(infix(infix(characterLiteral(' 'S ''),' < <',number('24')),'|',infix(characterLiteral(' 'Q ''),' < <',number('16'))),'|',infix(characterLiteral(' 'L ''),' < <',number('8')))"]}, {"filename" : "smallsql021_src.src.smallsql.junit.TestDataTypes", "nodes" : ["method(void(),'tearDown',[],[],block([try(block([declarationStatement(variables(simpleType(simpleName('Connection')),[variable('con',0,methodCall(false,simpleName('AllTests'),'getConnection',[]))])),declarationStatement(variables(simpleType(simpleName('Statement')),[variable('st',0,methodCall(false,simpleName('con'),'createStatement',[]))])),expressionStatement(methodCall(false,simpleName('st'),'execute',[infix(stringLiteral(' 'drop table  ''),'+',simpleName('table'))])),expressionStatement(methodCall(false,simpleName('st'),'close',[]))]),[catch(parameter(simpleType(simpleName('Throwable')),'e',0),block([]))])]))"]}, {"filename" : "smallsql021_src.src.smallsql.junit.TestOther", "nodes" : ["declarationStatement(variables(simpleType(simpleName('Statement')),[variable('st',0,methodCall(false,simpleName('con'),'createStatement',[qualifiedName(simpleName('ResultSet'),simpleName('TYPE_SCROLL_SENSITIVE')),qualifiedName(simpleName('ResultSet'),simpleName('CONCUR_READ_ONLY'))]))]))"]}, {"filename" : "smallsql021_src.src.smallsql.database.ExpressionValue", "nodes" : ["block([if(methodCall(false,simpleName('expr'),'isNull',[]),expressionStatement(assignment(simpleName('dataType'),'=',methodCall(false,simpleName('expr'),'getDataType',[]))),expressionStatement(methodCall(false,'initValue',[simpleName('expr')])))])","block([if(methodCall(false,simpleName('expr'),'isNull',[]),expressionStatement(assignment(simpleName('dataType'),'=',methodCall(false,simpleName('expr'),'getDataType',[]))),expressionStatement(methodCall(false,'initValue',[simpleName('expr')])))])"]}, {"filename" : "smallsql021_src.src.smallsql.database.StorePageMap", "nodes" : ["declarationStatement(variables(int(),[variable('i',0,cast(int(),bracket(infix(simpleName('key'),'%',qualifiedName(simpleName('table'),simpleName('length'))))))]))","declarationStatement(variables(int(),[variable('i',0,cast(int(),bracket(infix(simpleName('key'),'%',qualifiedName(simpleName('table'),simpleName('length'))))))]))","declarationStatement(variables(int(),[variable('i',0,cast(int(),bracket(infix(simpleName('key'),'%',qualifiedName(simpleName('table'),simpleName('length'))))))]))"]}, {"filename" : "smallsql021_src.src.smallsql.junit.TestTransactions", "nodes" : ["declarationStatement(variables(simpleType(simpleName('ResultSet')),[variable('rs',0,methodCall(false,methodCall(false,simpleName('con'),'createStatement',[qualifiedName(simpleName('ResultSet'),simpleName('TYPE_SCROLL_SENSITIVE')),qualifiedName(simpleName('ResultSet'),simpleName('CONCUR_UPDATABLE'))]),'executeQuery',[stringLiteral(' 'Select * from transactions Where 1=0 '')]))]))","declarationStatement(variables(simpleType(simpleName('ResultSet')),[variable('rs',0,methodCall(false,methodCall(false,simpleName('con'),'createStatement',[qualifiedName(simpleName('ResultSet'),simpleName('TYPE_SCROLL_SENSITIVE')),qualifiedName(simpleName('ResultSet'),simpleName('CONCUR_UPDATABLE'))]),'executeQuery',[stringLiteral(' 'Select * from transactions Where 1=0 '')]))]))","block([try(block([expressionStatement(methodCall(false,methodCall(false,simpleName('con'),'createStatement',[]),'execute',[stringLiteral(' 'Drop Table transactions '')]))]),[catch(parameter(simpleType(simpleName('Throwable')),'e',0),block([expressionStatement(methodCall(false,simpleName('e'),'printStackTrace',[]))]))]),expressionStatement(methodCall(false,simpleName('con'),'setAutoCommit',[booleanLiteral(true)]))])","block([try(block([expressionStatement(methodCall(false,methodCall(false,simpleName('con'),'createStatement',[]),'execute',[stringLiteral(' 'Drop Table transactions '')]))]),[catch(parameter(simpleType(simpleName('Throwable')),'e',0),block([expressionStatement(methodCall(false,simpleName('e'),'printStackTrace',[]))]))]),expressionStatement(methodCall(false,simpleName('con'),'setAutoCommit',[booleanLiteral(true)]))])","block([try(block([expressionStatement(methodCall(false,methodCall(false,simpleName('con'),'createStatement',[]),'execute',[stringLiteral(' 'Drop Table transactions '')]))]),[catch(parameter(simpleType(simpleName('Throwable')),'e',0),block([expressionStatement(methodCall(false,simpleName('e'),'printStackTrace',[]))]))]),expressionStatement(methodCall(false,simpleName('con'),'setAutoCommit',[booleanLiteral(true)]))])","block([try(block([expressionStatement(methodCall(false,methodCall(false,simpleName('con'),'createStatement',[]),'execute',[stringLiteral(' 'Drop Table transactions '')]))]),[catch(parameter(simpleType(simpleName('Throwable')),'e',0),block([expressionStatement(methodCall(false,simpleName('e'),'printStackTrace',[]))]))]),expressionStatement(methodCall(false,simpleName('con'),'setAutoCommit',[booleanLiteral(true)]))])","block([try(block([expressionStatement(methodCall(false,methodCall(false,simpleName('con'),'createStatement',[]),'execute',[stringLiteral(' 'Drop Table transactions '')]))]),[catch(parameter(simpleType(simpleName('Throwable')),'e',0),block([expressionStatement(methodCall(false,simpleName('e'),'printStackTrace',[]))]))]),expressionStatement(methodCall(false,simpleName('con'),'setAutoCommit',[booleanLiteral(true)]))])","block([try(block([expressionStatement(methodCall(false,methodCall(false,simpleName('con'),'createStatement',[]),'execute',[stringLiteral(' 'Drop Table transactions '')]))]),[catch(parameter(simpleType(simpleName('Throwable')),'e',0),block([expressionStatement(methodCall(false,simpleName('e'),'printStackTrace',[]))]))]),expressionStatement(methodCall(false,simpleName('con'),'setAutoCommit',[booleanLiteral(true)]))])","block([try(block([expressionStatement(methodCall(false,methodCall(false,simpleName('con'),'createStatement',[]),'execute',[stringLiteral(' 'Drop Table transactions '')]))]),[catch(parameter(simpleType(simpleName('Throwable')),'e',0),block([expressionStatement(methodCall(false,simpleName('e'),'printStackTrace',[]))]))])])","block([try(block([expressionStatement(methodCall(false,methodCall(false,simpleName('con'),'createStatement',[]),'execute',[stringLiteral(' 'Drop Table transactions '')]))]),[catch(parameter(simpleType(simpleName('Throwable')),'e',0),block([expressionStatement(methodCall(false,simpleName('e'),'printStackTrace',[]))]))])])","try(block([expressionStatement(methodCall(false,methodCall(false,simpleName('con'),'createStatement',[]),'execute',[stringLiteral(' 'Drop Table transactions '')]))]),[catch(parameter(simpleType(simpleName('Throwable')),'e',0),block([expressionStatement(methodCall(false,simpleName('e'),'printStackTrace',[]))]))])","try(block([expressionStatement(methodCall(false,methodCall(false,simpleName('con'),'createStatement',[]),'execute',[stringLiteral(' 'Drop Table transactions '')]))]),[catch(parameter(simpleType(simpleName('Throwable')),'e',0),block([expressionStatement(methodCall(false,simpleName('e'),'printStackTrace',[]))]))])","try(block([expressionStatement(methodCall(false,methodCall(false,simpleName('con'),'createStatement',[]),'execute',[stringLiteral(' 'Drop Table transactions '')]))]),[catch(parameter(simpleType(simpleName('Throwable')),'e',0),block([expressionStatement(methodCall(false,simpleName('e'),'printStackTrace',[]))]))])","try(block([expressionStatement(methodCall(false,methodCall(false,simpleName('con'),'createStatement',[]),'execute',[stringLiteral(' 'Drop Table transactions '')]))]),[catch(parameter(simpleType(simpleName('Throwable')),'e',0),block([expressionStatement(methodCall(false,simpleName('e'),'printStackTrace',[]))]))])","try(block([expressionStatement(methodCall(false,methodCall(false,simpleName('con'),'createStatement',[]),'execute',[stringLiteral(' 'Drop Table transactions '')]))]),[catch(parameter(simpleType(simpleName('Throwable')),'e',0),block([expressionStatement(methodCall(false,simpleName('e'),'printStackTrace',[]))]))])","try(block([expressionStatement(methodCall(false,methodCall(false,simpleName('con'),'createStatement',[]),'execute',[stringLiteral(' 'Drop Table transactions '')]))]),[catch(parameter(simpleType(simpleName('Throwable')),'e',0),block([expressionStatement(methodCall(false,simpleName('e'),'printStackTrace',[]))]))])","try(block([expressionStatement(methodCall(false,methodCall(false,simpleName('con'),'createStatement',[]),'execute',[stringLiteral(' 'Drop Table transactions '')]))]),[catch(parameter(simpleType(simpleName('Throwable')),'e',0),block([expressionStatement(methodCall(false,simpleName('e'),'printStackTrace',[]))]))])","try(block([expressionStatement(methodCall(false,methodCall(false,simpleName('con'),'createStatement',[]),'execute',[stringLiteral(' 'Drop Table transactions '')]))]),[catch(parameter(simpleType(simpleName('Throwable')),'e',0),block([expressionStatement(methodCall(false,simpleName('e'),'printStackTrace',[]))]))])","try(block([expressionStatement(methodCall(false,methodCall(false,simpleName('con'),'createStatement',[]),'execute',[stringLiteral(' 'Drop Table transactions '')]))]),[catch(parameter(simpleType(simpleName('Throwable')),'e',0),block([expressionStatement(methodCall(false,simpleName('e'),'printStackTrace',[]))]))])","block([expressionStatement(methodCall(false,'dropTable',[simpleName('con1'),stringLiteral(' 'transactions '')])),expressionStatement(methodCall(false,simpleName('con1'),'setAutoCommit',[booleanLiteral(true)])),expressionStatement(methodCall(false,simpleName('con2'),'close',[]))])","block([expressionStatement(methodCall(false,'dropTable',[simpleName('con1'),stringLiteral(' 'transactions '')])),expressionStatement(methodCall(false,simpleName('con1'),'setAutoCommit',[booleanLiteral(true)])),expressionStatement(methodCall(false,simpleName('con2'),'close',[]))])"]}, {"filename" : "smallsql021_src.src.smallsql.database.ExpressionFunctionYear", "nodes" : ["declarationStatement(variables(simpleType(qualifiedName(simpleName('DateTime'),simpleName('Details'))),[variable('details',0,newObject(simpleType(qualifiedName(simpleName('DateTime'),simpleName('Details'))),[methodCall(false,simpleName('param1'),'getLong',[])]))]))"]}, {"filename" : "smallsql021_src.src.smallsql.database.Expressions", "nodes" : ["if(infix(simpleName('size'),' >=',qualifiedName(simpleName('data'),simpleName('length'))),block([expressionStatement(methodCall(false,'resize',[infix(simpleName('size'),' < <',number('1'))]))]))","if(infix(simpleName('size'),' >=',qualifiedName(simpleName('data'),simpleName('length'))),block([expressionStatement(methodCall(false,'resize',[infix(simpleName('size'),' < <',number('1'))]))]))","block([if(infix(simpleName('idx'),' >=',simpleName('size')),throw(newObject(simpleType(simpleName('IndexOutOfBoundsException')),[infix(infix(infix(stringLiteral(' 'Index:  ''),'+',simpleName('idx')),'+',stringLiteral(' ', Size:  '')),'+',simpleName('size'))]))),return(arrayAccess(simpleName('data'),simpleName('idx')))])","if(infix(simpleName('idx'),' >=',simpleName('size')),throw(newObject(simpleType(simpleName('IndexOutOfBoundsException')),[infix(infix(infix(stringLiteral(' 'Index:  ''),'+',simpleName('idx')),'+',stringLiteral(' ', Size:  '')),'+',simpleName('size'))])))"]}, {"filename" : "smallsql021_src.src.smallsql.database.ExpressionFunctionFloor", "nodes" : ["method(simpleType(simpleName('String')),'getString',[],[simpleName('Exception')],block([declarationStatement(variables(simpleType(simpleName('Object')),[variable('obj',0,methodCall(false,'getObject',[]))])),if(infix(simpleName('obj'),'==',null()),return(null())),return(methodCall(false,simpleName('obj'),'toString',[]))]))"]}, {"filename" : "smallsql021_src.src.smallsql.database.ExpressionFunctionReturnFloat", "nodes" : ["method(simpleType(simpleName('String')),'getString',[],[simpleName('Exception')],block([declarationStatement(variables(simpleType(simpleName('Object')),[variable('obj',0,methodCall(false,'getObject',[]))])),if(infix(simpleName('obj'),'==',null()),return(null())),return(methodCall(false,simpleName('obj'),'toString',[]))]))"]}, {"filename" : "smallsql021_src.src.smallsql.database.GroupResult", "nodes" : ["block([declarationStatement(variables(int(),[variable('idx',0,methodCall(false,simpleName('internalExpressions'),'indexOf',[simpleName('expr')]))])),if(infix(simpleName('idx'),' >=',number('0')),return(simpleName('idx'))),expressionStatement(methodCall(false,simpleName('internalExpressions'),'add',[simpleName('expr')])),return(infix(methodCall(false,simpleName('internalExpressions'),'size',[]),'-',number('1')))])","block([declarationStatement(variables(int(),[variable('idx',0,methodCall(false,simpleName('internalExpressions'),'indexOf',[simpleName('expr')]))])),if(infix(simpleName('idx'),' >=',number('0')),return(simpleName('idx'))),expressionStatement(methodCall(false,simpleName('internalExpressions'),'add',[simpleName('expr')])),return(infix(methodCall(false,simpleName('internalExpressions'),'size',[]),'-',number('1')))])"]}, {"filename" : "smallsql021_src.src.smallsql.junit.TestLanguage", "nodes" : ["block([expressionStatement(methodCall(false,'recreateTestTab',[simpleName('stat')])),expressionStatement(methodCall(false,simpleName('stat'),'execute',[infix(infix(stringLiteral(' 'CREATE TABLE  ''),'+',simpleName('TABLE_NAME')),'+',stringLiteral(' ' (id_test INT) ''))])),expressionStatement(methodCall(false,'fail',[]))])","block([expressionStatement(methodCall(false,'recreateTestTab',[simpleName('stat')])),expressionStatement(methodCall(false,simpleName('stat'),'execute',[infix(infix(stringLiteral(' 'CREATE TABLE  ''),'+',simpleName('TABLE_NAME')),'+',stringLiteral(' ' (id_test INT) ''))])),expressionStatement(methodCall(false,'fail',[]))])","for([declarationExpression(variables(simpleType(simpleName('Iterator')),[variable('itr',0,methodCall(false,simpleName('diff'),'iterator',[]))]))],methodCall(false,simpleName('itr'),'hasNext',[]),[],block([expressionStatement(methodCall(false,simpleName('msgBuf'),'append',[methodCall(false,simpleName('itr'),'next',[])])),if(methodCall(false,simpleName('itr'),'hasNext',[]),expressionStatement(methodCall(false,simpleName('msgBuf'),'append',[characterLiteral(' ', '')])))]))","for([declarationExpression(variables(simpleType(simpleName('Iterator')),[variable('itr',0,methodCall(false,simpleName('diff'),'iterator',[]))]))],methodCall(false,simpleName('itr'),'hasNext',[]),[],block([expressionStatement(methodCall(false,simpleName('msgBuf'),'append',[methodCall(false,simpleName('itr'),'next',[])])),if(methodCall(false,simpleName('itr'),'hasNext',[]),expressionStatement(methodCall(false,simpleName('msgBuf'),'append',[characterLiteral(' ', '')])))]))","catch(parameter(simpleType(simpleName('SQLException')),'e',0),block([expressionStatement(methodCall(false,'assertMessage',[simpleName('e'),infix(infix(stringLiteral(' 'La tabella/vista  ' ''),'+',simpleName('TABLE_NAME')),'+',stringLiteral(' ' ' Ã¨ giÃ u00a0 esistente. ''))]))]))","catch(parameter(simpleType(simpleName('SQLException')),'e',0),block([expressionStatement(methodCall(false,'assertMessage',[simpleName('e'),infix(infix(stringLiteral(' 'La tabella/vista  ' ''),'+',simpleName('TABLE_NAME')),'+',stringLiteral(' ' ' Ã¨ giÃ u00a0 esistente. ''))]))]))"]}, {"filename" : "smallsql021_src.src.smallsql.junit.BenchTest", "nodes" : ["if(infix(simpleName('count'),'!=',simpleName('rowCount')),expressionStatement(methodCall(false,qualifiedName(simpleName('System'),simpleName('out')),'println',[infix(infix(stringLiteral(' '  Failed: Only  ''),'+',simpleName('count')),'+',stringLiteral(' ' rows were inserted. ''))])),expressionStatement(methodCall(false,qualifiedName(simpleName('System'),simpleName('out')),'println',[infix(infix(stringLiteral(' '  Test time:  ''),'+',simpleName('time')),'+',stringLiteral(' ' ms ''))])))","if(infix(simpleName('count'),'!=',simpleName('rowCount')),expressionStatement(methodCall(false,qualifiedName(simpleName('System'),simpleName('out')),'println',[infix(infix(stringLiteral(' '  Failed: Only  ''),'+',simpleName('count')),'+',stringLiteral(' ' rows were inserted. ''))])),expressionStatement(methodCall(false,qualifiedName(simpleName('System'),simpleName('out')),'println',[infix(infix(stringLiteral(' '  Test time:  ''),'+',simpleName('time')),'+',stringLiteral(' ' ms ''))])))","block([expressionStatement(methodCall(false,qualifiedName(simpleName('System'),simpleName('out')),'println',[])),expressionStatement(methodCall(false,qualifiedName(simpleName('System'),simpleName('out')),'println',[stringLiteral(' '=================================================================== '')]))])","block([expressionStatement(methodCall(false,qualifiedName(simpleName('System'),simpleName('out')),'println',[])),expressionStatement(methodCall(false,qualifiedName(simpleName('System'),simpleName('out')),'println',[stringLiteral(' '=================================================================== '')]))])","block([expressionStatement(methodCall(false,qualifiedName(simpleName('System'),simpleName('out')),'println',[])),expressionStatement(methodCall(false,qualifiedName(simpleName('System'),simpleName('out')),'println',[stringLiteral(' '=================================================================== '')]))])","block([expressionStatement(methodCall(false,qualifiedName(simpleName('System'),simpleName('out')),'println',[])),expressionStatement(methodCall(false,qualifiedName(simpleName('System'),simpleName('out')),'println',[stringLiteral(' '=================================================================== '')]))])","block([expressionStatement(methodCall(false,qualifiedName(simpleName('System'),simpleName('out')),'println',[])),expressionStatement(methodCall(false,qualifiedName(simpleName('System'),simpleName('out')),'println',[stringLiteral(' '=================================================================== '')]))])","block([expressionStatement(methodCall(false,qualifiedName(simpleName('System'),simpleName('out')),'println',[])),expressionStatement(methodCall(false,qualifiedName(simpleName('System'),simpleName('out')),'println',[stringLiteral(' '=================================================================== '')]))])","block([expressionStatement(methodCall(false,qualifiedName(simpleName('System'),simpleName('out')),'println',[])),expressionStatement(methodCall(false,qualifiedName(simpleName('System'),simpleName('out')),'println',[stringLiteral(' '=================================================================== '')]))])","block([expressionStatement(methodCall(false,qualifiedName(simpleName('System'),simpleName('out')),'println',[])),expressionStatement(methodCall(false,qualifiedName(simpleName('System'),simpleName('out')),'println',[stringLiteral(' '=================================================================== '')]))])","block([expressionStatement(methodCall(false,qualifiedName(simpleName('System'),simpleName('out')),'println',[])),expressionStatement(methodCall(false,qualifiedName(simpleName('System'),simpleName('out')),'println',[stringLiteral(' '=================================================================== '')]))])","block([expressionStatement(methodCall(false,qualifiedName(simpleName('System'),simpleName('out')),'println',[])),expressionStatement(methodCall(false,qualifiedName(simpleName('System'),simpleName('out')),'println',[stringLiteral(' '=================================================================== '')]))])","block([expressionStatement(methodCall(false,qualifiedName(simpleName('System'),simpleName('out')),'println',[])),expressionStatement(methodCall(false,qualifiedName(simpleName('System'),simpleName('out')),'println',[stringLiteral(' '=================================================================== '')]))])","block([expressionStatement(methodCall(false,qualifiedName(simpleName('System'),simpleName('out')),'println',[])),expressionStatement(methodCall(false,qualifiedName(simpleName('System'),simpleName('out')),'println',[stringLiteral(' '=================================================================== '')]))])","block([expressionStatement(methodCall(false,qualifiedName(simpleName('System'),simpleName('out')),'println',[])),expressionStatement(methodCall(false,qualifiedName(simpleName('System'),simpleName('out')),'println',[stringLiteral(' '=================================================================== '')]))])","declarationStatement(variables(simpleType(qualifiedName(qualifiedName(simpleName('java'),simpleName('io')),simpleName('File'))),[variable('file',0,newObject(simpleType(qualifiedName(qualifiedName(simpleName('java'),simpleName('io')),simpleName('File'))),[infix(simpleName('tableName'),'+',stringLiteral(' '.bin ''))]))]))","declarationStatement(variables(simpleType(qualifiedName(qualifiedName(simpleName('java'),simpleName('io')),simpleName('File'))),[variable('file',0,newObject(simpleType(qualifiedName(qualifiedName(simpleName('java'),simpleName('io')),simpleName('File'))),[infix(simpleName('tableName'),'+',stringLiteral(' '.bin ''))]))]))","for([declarationExpression(variables(int(),[variable('i',0,number('0'))]))],infix(simpleName('i'),' <',simpleName('rowCount')),[postfix(simpleName('i'),'++')],block([expressionStatement(methodCall(false,simpleName('fos'),'write',[simpleName('bytes')]))]))","for([declarationExpression(variables(int(),[variable('i',0,number('0'))]))],infix(simpleName('i'),' <',simpleName('rowCount')),[postfix(simpleName('i'),'++')],block([expressionStatement(methodCall(false,simpleName('fos'),'write',[simpleName('bytes')]))]))","expressionStatement(methodCall(false,qualifiedName(simpleName('System'),simpleName('out')),'println',[infix(infix(stringLiteral(' '  Failed: Only  ''),'+',bracket(infix(simpleName('rowCount'),'-',simpleName('count')))),'+',stringLiteral(' ' rows were deleted. ''))]))","expressionStatement(methodCall(false,qualifiedName(simpleName('System'),simpleName('out')),'println',[infix(infix(stringLiteral(' '  Failed: Only  ''),'+',bracket(infix(simpleName('rowCount'),'-',simpleName('count')))),'+',stringLiteral(' ' rows were deleted. ''))]))","declarationStatement(variables(simpleType(simpleName('PreparedStatement')),[variable('pr',0,methodCall(false,simpleName('con'),'prepareStatement',[infix(infix(stringLiteral(' 'UPDATE  ''),'+',simpleName('tableName')),'+',stringLiteral(' ' SET bi=?,c=?,d=?,de=?,f=?,im=?,i=?,m=?,n=?,r=?,sd=?,si=?,sm=?,sy=?,t=?,ti=?,vb=?,vc=? WHERE i=? ''))]))]))","declarationStatement(variables(simpleType(simpleName('PreparedStatement')),[variable('pr',0,methodCall(false,simpleName('con'),'prepareStatement',[infix(infix(stringLiteral(' 'UPDATE  ''),'+',simpleName('tableName')),'+',stringLiteral(' ' SET bi=?,c=?,d=?,de=?,f=?,im=?,i=?,m=?,n=?,r=?,sd=?,si=?,sm=?,sy=?,t=?,ti=?,vb=?,vc=? WHERE i=? ''))]))]))","if(infix(simpleName('count'),'==',number('0')),block([expressionStatement(methodCall(false,'createTestDataWithClassicInsert',[simpleName('con')])),expressionStatement(assignment(simpleName('rs'),'=',methodCall(false,simpleName('st1'),'executeQuery',[infix(stringLiteral(' 'SELECT count(*) FROM  ''),'+',simpleName('tableName'))]))),expressionStatement(methodCall(false,simpleName('rs'),'next',[])),expressionStatement(assignment(simpleName('count'),'=',methodCall(false,simpleName('rs'),'getInt',[number('1')])))]))","if(infix(simpleName('count'),'==',number('0')),block([expressionStatement(methodCall(false,'createTestDataWithClassicInsert',[simpleName('con')])),expressionStatement(assignment(simpleName('rs'),'=',methodCall(false,simpleName('st1'),'executeQuery',[infix(stringLiteral(' 'SELECT count(*) FROM  ''),'+',simpleName('tableName'))]))),expressionStatement(methodCall(false,simpleName('rs'),'next',[])),expressionStatement(assignment(simpleName('count'),'=',methodCall(false,simpleName('rs'),'getInt',[number('1')])))]))","declarationStatement(variables(simpleType(qualifiedName(qualifiedName(simpleName('java'),simpleName('io')),simpleName('FileInputStream'))),[variable('fis',0,newObject(simpleType(qualifiedName(qualifiedName(simpleName('java'),simpleName('io')),simpleName('FileInputStream'))),[infix(simpleName('tableName'),'+',stringLiteral(' '.bin ''))]))]))","declarationStatement(variables(simpleType(qualifiedName(qualifiedName(simpleName('java'),simpleName('io')),simpleName('FileInputStream'))),[variable('fis',0,newObject(simpleType(qualifiedName(qualifiedName(simpleName('java'),simpleName('io')),simpleName('FileInputStream'))),[infix(simpleName('tableName'),'+',stringLiteral(' '.bin ''))]))]))","if(infix(simpleName('updateCount'),'!=',number('1')),block([expressionStatement(methodCall(false,qualifiedName(simpleName('System'),simpleName('out')),'println',[infix(infix(stringLiteral(' '  Failed: Update count should be 1 but it is  ''),'+',simpleName('updateCount')),'+',stringLiteral(' '. ''))])),return()]))","if(infix(simpleName('updateCount'),'!=',number('1')),block([expressionStatement(methodCall(false,qualifiedName(simpleName('System'),simpleName('out')),'println',[infix(infix(stringLiteral(' '  Failed: Update count should be 1 but it is  ''),'+',simpleName('updateCount')),'+',stringLiteral(' '. ''))])),return()]))","block([declarationStatement(variables(simpleType(simpleName('Statement')),[variable('st',0,methodCall(false,simpleName('con'),'createStatement',[]))])),expressionStatement(methodCall(false,simpleName('st'),'execute',[infix(stringLiteral(' 'DELETE FROM  ''),'+',simpleName('tableName'))])),expressionStatement(methodCall(false,simpleName('st'),'close',[]))])","block([declarationStatement(variables(simpleType(simpleName('Statement')),[variable('st',0,methodCall(false,simpleName('con'),'createStatement',[]))])),expressionStatement(methodCall(false,simpleName('st'),'execute',[infix(stringLiteral(' 'DELETE FROM  ''),'+',simpleName('tableName'))])),expressionStatement(methodCall(false,simpleName('st'),'close',[]))])","declarationStatement(variables(simpleType(simpleName('Statement')),[variable('st',0,methodCall(false,simpleName('con'),'createStatement',[qualifiedName(simpleName('ResultSet'),simpleName('TYPE_SCROLL_SENSITIVE')),qualifiedName(simpleName('ResultSet'),simpleName('CONCUR_UPDATABLE'))]))]))","declarationStatement(variables(simpleType(simpleName('Statement')),[variable('st',0,methodCall(false,simpleName('con'),'createStatement',[qualifiedName(simpleName('ResultSet'),simpleName('TYPE_SCROLL_SENSITIVE')),qualifiedName(simpleName('ResultSet'),simpleName('CONCUR_UPDATABLE'))]))]))","declarationStatement(variables(simpleType(simpleName('Statement')),[variable('st',0,methodCall(false,simpleName('con'),'createStatement',[qualifiedName(simpleName('ResultSet'),simpleName('TYPE_SCROLL_SENSITIVE')),qualifiedName(simpleName('ResultSet'),simpleName('CONCUR_UPDATABLE'))]))]))","declarationStatement(variables(simpleType(simpleName('Statement')),[variable('st',0,methodCall(false,simpleName('con'),'createStatement',[qualifiedName(simpleName('ResultSet'),simpleName('TYPE_SCROLL_SENSITIVE')),qualifiedName(simpleName('ResultSet'),simpleName('CONCUR_UPDATABLE'))]))]))","declarationStatement(variables(simpleType(simpleName('Statement')),[variable('st',0,methodCall(false,simpleName('con'),'createStatement',[qualifiedName(simpleName('ResultSet'),simpleName('TYPE_SCROLL_SENSITIVE')),qualifiedName(simpleName('ResultSet'),simpleName('CONCUR_UPDATABLE'))]))]))","declarationStatement(variables(simpleType(qualifiedName(qualifiedName(simpleName('java'),simpleName('io')),simpleName('FileOutputStream'))),[variable('fos',0,newObject(simpleType(qualifiedName(qualifiedName(simpleName('java'),simpleName('io')),simpleName('FileOutputStream'))),[infix(simpleName('tableName'),'+',stringLiteral(' '.bin ''))]))]))","declarationStatement(variables(simpleType(qualifiedName(qualifiedName(simpleName('java'),simpleName('io')),simpleName('FileOutputStream'))),[variable('fos',0,newObject(simpleType(qualifiedName(qualifiedName(simpleName('java'),simpleName('io')),simpleName('FileOutputStream'))),[infix(simpleName('tableName'),'+',stringLiteral(' '.bin ''))]))]))","declarationStatement(variables(simpleType(simpleName('Statement')),[variable('st',0,methodCall(false,simpleName('con'),'createStatement',[qualifiedName(simpleName('ResultSet'),simpleName('TYPE_SCROLL_SENSITIVE')),qualifiedName(simpleName('ResultSet'),simpleName('CONCUR_READ_ONLY'))]))]))","catch(parameter(simpleType(simpleName('Exception')),'e',0),block([expressionStatement(methodCall(false,qualifiedName(simpleName('System'),simpleName('out')),'println',[infix(stringLiteral(' '  Failed: ''),'+',simpleName('e'))]))]))","catch(parameter(simpleType(simpleName('Exception')),'e',0),block([expressionStatement(methodCall(false,qualifiedName(simpleName('System'),simpleName('out')),'println',[infix(stringLiteral(' '  Failed: ''),'+',simpleName('e'))]))]))","catch(parameter(simpleType(simpleName('Exception')),'e',0),block([expressionStatement(methodCall(false,qualifiedName(simpleName('System'),simpleName('out')),'println',[infix(stringLiteral(' '  Failed: ''),'+',simpleName('e'))]))]))","catch(parameter(simpleType(simpleName('Exception')),'e',0),block([expressionStatement(methodCall(false,qualifiedName(simpleName('System'),simpleName('out')),'println',[infix(stringLiteral(' '  Failed: ''),'+',simpleName('e'))]))]))","catch(parameter(simpleType(simpleName('Exception')),'e',0),block([expressionStatement(methodCall(false,qualifiedName(simpleName('System'),simpleName('out')),'println',[infix(stringLiteral(' '  Failed: ''),'+',simpleName('e'))]))]))","catch(parameter(simpleType(simpleName('Exception')),'e',0),block([expressionStatement(methodCall(false,qualifiedName(simpleName('System'),simpleName('out')),'println',[infix(stringLiteral(' '  Failed: ''),'+',simpleName('e'))]))]))","catch(parameter(simpleType(simpleName('Exception')),'e',0),block([expressionStatement(methodCall(false,qualifiedName(simpleName('System'),simpleName('out')),'println',[infix(stringLiteral(' '  Failed: ''),'+',simpleName('e'))]))]))","catch(parameter(simpleType(simpleName('Exception')),'e',0),block([expressionStatement(methodCall(false,qualifiedName(simpleName('System'),simpleName('out')),'println',[infix(stringLiteral(' '  Failed: ''),'+',simpleName('e'))]))]))","catch(parameter(simpleType(simpleName('Exception')),'e',0),block([expressionStatement(methodCall(false,qualifiedName(simpleName('System'),simpleName('out')),'println',[infix(stringLiteral(' '  Failed: ''),'+',simpleName('e'))]))]))","catch(parameter(simpleType(simpleName('Exception')),'e',0),block([expressionStatement(methodCall(false,qualifiedName(simpleName('System'),simpleName('out')),'println',[infix(stringLiteral(' '  Failed: ''),'+',simpleName('e'))]))]))","catch(parameter(simpleType(simpleName('Exception')),'e',0),block([expressionStatement(methodCall(false,qualifiedName(simpleName('System'),simpleName('out')),'println',[infix(stringLiteral(' '  Failed: ''),'+',simpleName('e'))]))]))","catch(parameter(simpleType(simpleName('Exception')),'e',0),block([expressionStatement(methodCall(false,qualifiedName(simpleName('System'),simpleName('out')),'println',[infix(stringLiteral(' '  Failed: ''),'+',simpleName('e'))]))]))"]}, {"filename" : "smallsql021_src.src.smallsql.database.Columns", "nodes" : ["if(infix(simpleName('size'),' >=',qualifiedName(simpleName('data'),simpleName('length'))),block([expressionStatement(methodCall(false,'resize',[infix(simpleName('size'),' < <',number('1'))]))]))","block([if(infix(simpleName('idx'),' >=',simpleName('size')),throw(newObject(simpleType(simpleName('IndexOutOfBoundsException')),[infix(infix(infix(stringLiteral(' 'Column index:  ''),'+',simpleName('idx')),'+',stringLiteral(' ', Size:  '')),'+',simpleName('size'))]))),return(arrayAccess(simpleName('data'),simpleName('idx')))])"]}, {"filename" : "smallsql021_src.src.smallsql.junit.TestAlterTable", "nodes" : ["method(void(),'tearDown',[],[],block([try(block([expressionStatement(methodCall(false,'dropTable',[methodCall(false,simpleName('AllTests'),'getConnection',[]),simpleName('table')]))]),[catch(parameter(simpleType(simpleName('SQLException')),'ex',0),block([expressionStatement(methodCall(false,simpleName('ex'),'printStackTrace',[]))]))])]))"]}, {"filename" : "smallsql021_src.src.smallsql.junit.TestMoneyRounding", "nodes" : ["method(void(),'tearDown',[],[],block([try(block([declarationStatement(variables(simpleType(simpleName('Connection')),[variable('con',0,methodCall(false,simpleName('AllTests'),'getConnection',[]))])),declarationStatement(variables(simpleType(simpleName('Statement')),[variable('st',0,methodCall(false,simpleName('con'),'createStatement',[]))])),expressionStatement(methodCall(false,simpleName('st'),'execute',[infix(stringLiteral(' 'drop table  ''),'+',simpleName('table'))])),expressionStatement(methodCall(false,simpleName('st'),'close',[]))]),[catch(parameter(simpleType(simpleName('Throwable')),'e',0),block([]))])]))"]}, {"filename" : "smallsql021_src.src.smallsql.database.ExpressionFunctionRound", "nodes" : ["if(infix(simpleName('places'),' >',number('0')),block([expressionStatement(assignment(simpleName('value'),'/=',simpleName('factor')))]),block([expressionStatement(assignment(simpleName('value'),'*=',simpleName('factor')))]))","if(infix(simpleName('places'),' >',number('0')),block([for([declarationExpression(variables(int(),[variable('i',0,number('0'))]))],infix(simpleName('i'),' <',simpleName('places')),[postfix(simpleName('i'),'++')],block([expressionStatement(assignment(simpleName('factor'),'*=',number('10')))])),expressionStatement(assignment(simpleName('value'),'*=',simpleName('factor')))]),block([for([declarationExpression(variables(int(),[variable('i',0,number('0'))]))],infix(simpleName('i'),' >',simpleName('places')),[postfix(simpleName('i'),'--')],block([expressionStatement(assignment(simpleName('factor'),'*=',number('10')))])),expressionStatement(assignment(simpleName('value'),'/=',simpleName('factor')))]))"]}, {"filename" : "smallsql021_src.src.smallsql.database.ExpressionFunction", "nodes" : ["declarationStatement(variables(arrayType(simpleType(simpleName('Object'))),[variable('params',0,arrayInitializer([methodCall(false,simpleName('SQLTokenizer'),'getKeyWord',[simpleName('dataType')]),methodCall(false,simpleName('SQLTokenizer'),'getKeyWord',[methodCall(false,'getFunction',[])])]))]))","declarationStatement(variables(arrayType(simpleType(simpleName('Object'))),[variable('params',0,arrayInitializer([methodCall(false,simpleName('SQLTokenizer'),'getKeyWord',[simpleName('dataType')]),methodCall(false,simpleName('SQLTokenizer'),'getKeyWord',[methodCall(false,'getFunction',[])])]))]))"]}, {"filename" : "smallsql021_src.src.smallsql.database.ExpressionFunctionDayOfYear", "nodes" : ["declarationStatement(variables(simpleType(qualifiedName(simpleName('DateTime'),simpleName('Details'))),[variable('details',0,newObject(simpleType(qualifiedName(simpleName('DateTime'),simpleName('Details'))),[methodCall(false,simpleName('param1'),'getLong',[])]))]))"]}, {"filename" : "smallsql021_src.src.smallsql.database.Money", "nodes" : ["block([declarationStatement(variables(simpleType(simpleName('Money')),[variable('money',0,newObject(simpleType(simpleName('Money')),[]))])),expressionStatement(assignment(qualifiedName(simpleName('money'),simpleName('value')),'=',simpleName('value'))),return(simpleName('money'))])","block([declarationStatement(variables(simpleType(simpleName('Money')),[variable('money',0,newObject(simpleType(simpleName('Money')),[]))])),expressionStatement(assignment(qualifiedName(simpleName('money'),simpleName('value')),'=',simpleName('value'))),return(simpleName('money'))])"]}, {"filename" : "smallsql021_src.src.smallsql.junit.TestTokenizer", "nodes" : ["catch(parameter(simpleType(simpleName('SQLException')),'e',0),block([expressionStatement(methodCall(false,simpleName('out'),'println',[infix(infix(stringLiteral(' 'REGULAR:  ''),'+',methodCall(false,simpleName('e'),'getMessage',[])),'+',characterLiteral(' '  n ''))]))]))","catch(parameter(simpleType(simpleName('SQLException')),'e',0),block([expressionStatement(methodCall(false,simpleName('out'),'println',[infix(infix(stringLiteral(' 'REGULAR:  ''),'+',methodCall(false,simpleName('e'),'getMessage',[])),'+',characterLiteral(' '  n ''))]))]))"]}, {"filename" : "smallsql021_src.src.smallsql.database.ExpressionFunctionSubstring", "nodes" : ["method(boolean(),'isNull',[],[simpleName('Exception')],block([return(infix(infix(methodCall(false,simpleName('param1'),'isNull',[]),'||',methodCall(false,simpleName('param2'),'isNull',[])),'||',methodCall(false,simpleName('param3'),'isNull',[])))]))","if(infix(simpleName('length'),' <',number('0')),throw(methodCall(false,simpleName('SmallSQLException'),'create',[qualifiedName(simpleName('Language'),simpleName('SUBSTR_INVALID_LEN')),newObject(simpleType(simpleName('Integer')),[simpleName('length')])])))","if(infix(simpleName('length'),' <',number('0')),throw(methodCall(false,simpleName('SmallSQLException'),'create',[qualifiedName(simpleName('Language'),simpleName('SUBSTR_INVALID_LEN')),newObject(simpleType(simpleName('Integer')),[simpleName('length')])])))"]}, {"filename" : "smallsql021_src.src.smallsql.database.StoreImpl", "nodes" : ["throw(methodCall(false,simpleName('SmallSQLException'),'create',[qualifiedName(simpleName('Language'),simpleName('VALUE_CANT_CONVERT')),newArray(simpleType(simpleName('Object')),[],arrayInitializer([methodCall(false,simpleName('SQLTokenizer'),'getKeyWord',[simpleName('dataType')]),stringLiteral(' 'NUMERIC '')]))]))","throw(methodCall(false,simpleName('SmallSQLException'),'create',[qualifiedName(simpleName('Language'),simpleName('VALUE_CANT_CONVERT')),newArray(simpleType(simpleName('Object')),[],arrayInitializer([methodCall(false,simpleName('SQLTokenizer'),'getKeyWord',[simpleName('dataType')]),stringLiteral(' 'NUMERIC '')]))]))","declarationStatement(variables(simpleType(simpleName('StoreImpl')),[variable('store',0,methodCall(false,simpleName('table'),'getLobStore',[fieldAccess(false,bracket(cast(simpleType(simpleName('TableStorePage')),simpleName('storePage'))),'con'),simpleName('lobFilePos'),qualifiedName(simpleName('SQLTokenizer'),simpleName('SELECT'))]))]))","declarationStatement(variables(simpleType(simpleName('StoreImpl')),[variable('store',0,methodCall(false,simpleName('table'),'getLobStore',[fieldAccess(false,bracket(cast(simpleType(simpleName('TableStorePage')),simpleName('storePage'))),'con'),simpleName('lobFilePos'),qualifiedName(simpleName('SQLTokenizer'),simpleName('SELECT'))]))]))","expressionStatement(methodCall(false,simpleName('System'),'arraycopy',[simpleName('page'),simpleName('valueOffset'),simpleName('bytes'),number('0'),qualifiedName(simpleName('bytes'),simpleName('length'))]))","expressionStatement(methodCall(false,simpleName('System'),'arraycopy',[simpleName('page'),simpleName('valueOffset'),simpleName('bytes'),number('0'),qualifiedName(simpleName('bytes'),simpleName('length'))]))","expressionStatement(methodCall(false,simpleName('System'),'arraycopy',[simpleName('page'),simpleName('valueOffset'),simpleName('bytes'),number('0'),qualifiedName(simpleName('bytes'),simpleName('length'))]))","expressionStatement(methodCall(false,simpleName('System'),'arraycopy',[simpleName('page'),simpleName('valueOffset'),simpleName('bytes'),number('0'),qualifiedName(simpleName('bytes'),simpleName('length'))]))","expressionStatement(methodCall(false,simpleName('System'),'arraycopy',[simpleName('page'),simpleName('valueOffset'),simpleName('bytes'),number('0'),qualifiedName(simpleName('bytes'),simpleName('length'))]))","expressionStatement(assignment(arrayAccess(simpleName('page'),postfix(simpleName('offset'),'++')),'=',cast(byte(),bracket(infix(simpleName('value'),' > >',number('16'))))))","expressionStatement(assignment(arrayAccess(simpleName('page'),postfix(simpleName('offset'),'++')),'=',cast(byte(),bracket(infix(simpleName('value'),' > >',number('16'))))))","bracket(infix(bracket(infix(arrayAccess(simpleName('page'),postfix(simpleName('offset'),'++')),'&',number('0xFF'))),' < <',number('16')))","bracket(infix(bracket(infix(arrayAccess(simpleName('page'),postfix(simpleName('offset'),'++')),'&',number('0xFF'))),' < <',number('16')))","bracket(infix(bracket(infix(arrayAccess(simpleName('page'),postfix(simpleName('offset'),'++')),'&',number('0xFF'))),' < <',number('8')))","bracket(infix(bracket(infix(arrayAccess(simpleName('page'),postfix(simpleName('offset'),'++')),'&',number('0xFF'))),' < <',number('8')))","expressionStatement(assignment(fieldAccess(false,bracket(cast(simpleType(simpleName('TableStorePage')),qualifiedName(simpleName('newData'),simpleName('storePage')))),'lockType'),'=',qualifiedName(simpleName('TableView'),simpleName('LOCK_INSERT'))))","expressionStatement(assignment(fieldAccess(false,bracket(cast(simpleType(simpleName('TableStorePage')),qualifiedName(simpleName('newData'),simpleName('storePage')))),'lockType'),'=',qualifiedName(simpleName('TableView'),simpleName('LOCK_INSERT'))))","expressionStatement(assignment(arrayAccess(simpleName('page'),postfix(simpleName('offset'),'++')),'=',cast(byte(),bracket(infix(simpleName('value'),' > >',number('24'))))))","expressionStatement(assignment(arrayAccess(simpleName('page'),postfix(simpleName('offset'),'++')),'=',cast(byte(),bracket(infix(simpleName('value'),' > >',number('24'))))))","expressionStatement(assignment(simpleName('offset'),'+=',methodCall(false,simpleName('column'),'initAutoIncrement',[qualifiedName(simpleName('storePage'),simpleName('raFile')),infix(simpleName('filePos'),'+',simpleName('offset'))])))","expressionStatement(assignment(simpleName('offset'),'+=',methodCall(false,simpleName('column'),'initAutoIncrement',[qualifiedName(simpleName('storePage'),simpleName('raFile')),infix(simpleName('filePos'),'+',simpleName('offset'))])))","expressionStatement(assignment(arrayAccess(simpleName('page'),postfix(simpleName('offset'),'++')),'=',cast(byte(),bracket(infix(simpleName('value'),' > >',number('8'))))))","expressionStatement(assignment(arrayAccess(simpleName('page'),postfix(simpleName('offset'),'++')),'=',cast(byte(),bracket(infix(simpleName('value'),' > >',number('8'))))))","expressionStatement(assignment(arrayAccess(simpleName('page'),postfix(simpleName('offset'),'++')),'=',cast(byte(),bracket(infix(simpleName('value'),' > >',number('8'))))))"]}, {"filename" : "smallsql021_src.src.smallsql.database.Strings", "nodes" : ["if(infix(simpleName('size'),' >=',qualifiedName(simpleName('data'),simpleName('length'))),block([expressionStatement(methodCall(false,'resize',[infix(simpleName('size'),' < <',number('1'))]))]))","block([if(infix(simpleName('idx'),' >=',simpleName('size')),throw(newObject(simpleType(simpleName('IndexOutOfBoundsException')),[infix(infix(infix(stringLiteral(' 'Column index:  ''),'+',simpleName('idx')),'+',stringLiteral(' ', Size:  '')),'+',simpleName('size'))]))),return(arrayAccess(simpleName('data'),simpleName('idx')))])"]}, {"filename" : "smallsql021_src.src.smallsql.database.ExpressionFunctionHour", "nodes" : ["declarationStatement(variables(simpleType(qualifiedName(simpleName('DateTime'),simpleName('Details'))),[variable('details',0,newObject(simpleType(qualifiedName(simpleName('DateTime'),simpleName('Details'))),[methodCall(false,simpleName('param1'),'getLong',[])]))]))"]}, {"filename" : "smallsql021_src.src.smallsql.database.ExpressionFunctionAbs", "nodes" : ["method(simpleType(simpleName('String')),'getString',[],[simpleName('Exception')],block([declarationStatement(variables(simpleType(simpleName('Object')),[variable('obj',0,methodCall(false,'getObject',[]))])),if(infix(simpleName('obj'),'==',null()),return(null())),return(methodCall(false,simpleName('obj'),'toString',[]))]))"]}, {"filename" : "smallsql021_src.src.smallsql.junit.TestAlterTable2", "nodes" : ["method(void(),'tearDown',[],[],block([try(block([expressionStatement(methodCall(false,'dropTable',[methodCall(false,simpleName('AllTests'),'getConnection',[]),simpleName('table')]))]),[catch(parameter(simpleType(simpleName('SQLException')),'ex',0),block([expressionStatement(methodCall(false,simpleName('ex'),'printStackTrace',[]))]))])]))","expressionStatement(assignment(simpleName('rs'),'=',methodCall(false,methodCall(false,simpleName('con'),'getMetaData',[]),'getIndexInfo',[null(),null(),simpleName('table'),booleanLiteral(false),booleanLiteral(false)])))","expressionStatement(assignment(simpleName('rs'),'=',methodCall(false,methodCall(false,simpleName('con'),'getMetaData',[]),'getIndexInfo',[null(),null(),simpleName('table'),booleanLiteral(false),booleanLiteral(false)])))","expressionStatement(assignment(simpleName('rs'),'=',methodCall(false,methodCall(false,simpleName('con'),'getMetaData',[]),'getIndexInfo',[null(),null(),simpleName('table'),booleanLiteral(false),booleanLiteral(false)])))","expressionStatement(assignment(simpleName('rs'),'=',methodCall(false,methodCall(false,simpleName('con'),'getMetaData',[]),'getIndexInfo',[null(),null(),simpleName('table'),booleanLiteral(false),booleanLiteral(false)])))","expressionStatement(methodCall(false,'assertRSMetaData',[simpleName('rs'),newArray(simpleType(simpleName('String')),[],arrayInitializer([stringLiteral(' 'a ''),stringLiteral(' 'b '')])),newArray(int(),[],arrayInitializer([qualifiedName(simpleName('Types'),simpleName('VARCHAR')),qualifiedName(simpleName('Types'),simpleName('VARCHAR'))]))]))","expressionStatement(methodCall(false,'assertRSMetaData',[simpleName('rs'),newArray(simpleType(simpleName('String')),[],arrayInitializer([stringLiteral(' 'a ''),stringLiteral(' 'b '')])),newArray(int(),[],arrayInitializer([qualifiedName(simpleName('Types'),simpleName('VARCHAR')),qualifiedName(simpleName('Types'),simpleName('VARCHAR'))]))]))"]}, {"filename" : "smallsql021_src.src.smallsql.database.ExpressionFunctionConvert", "nodes" : ["block([declarationStatement(variables(arrayType(byte()),[variable('buffer',0,newArray(byte(),[simpleName('length')]))])),expressionStatement(methodCall(false,simpleName('System'),'arraycopy',[simpleName('bytes'),number('0'),simpleName('buffer'),number('0'),methodCall(false,simpleName('Math'),'min',[qualifiedName(simpleName('bytes'),simpleName('length')),simpleName('length')])])),return(simpleName('buffer'))])","block([declarationStatement(variables(arrayType(byte()),[variable('buffer',0,newArray(byte(),[simpleName('length')]))])),expressionStatement(methodCall(false,simpleName('System'),'arraycopy',[simpleName('bytes'),number('0'),simpleName('buffer'),number('0'),methodCall(false,simpleName('Math'),'min',[qualifiedName(simpleName('bytes'),simpleName('length')),simpleName('length')])])),return(simpleName('buffer'))])"]}, {"filename" : "smallsql021_src.src.smallsql.database.ExpressionFunctionReplace", "nodes" : ["method(boolean(),'isNull',[],[simpleName('Exception')],block([return(infix(infix(methodCall(false,simpleName('param1'),'isNull',[]),'||',methodCall(false,simpleName('param2'),'isNull',[])),'||',methodCall(false,simpleName('param3'),'isNull',[])))]))"]}, {"filename" : "smallsql021_src.src.smallsql.junit.TestFunctions", "nodes" : ["method(void(),'tearDown',[],[],block([try(block([declarationStatement(variables(simpleType(simpleName('Connection')),[variable('con',0,methodCall(false,simpleName('AllTests'),'getConnection',[]))])),declarationStatement(variables(simpleType(simpleName('Statement')),[variable('st',0,methodCall(false,simpleName('con'),'createStatement',[]))])),expressionStatement(methodCall(false,simpleName('st'),'execute',[infix(stringLiteral(' 'drop table  ''),'+',simpleName('table'))])),expressionStatement(methodCall(false,simpleName('st'),'close',[]))]),[catch(parameter(simpleType(simpleName('Throwable')),'e',0),block([]))])]))"]}, {"filename" : "smallsql021_src.src.smallsql.database.CommandInsert", "nodes" : ["block([expressionStatement(methodCall(false,simpleName('keyColumnNames'),'add',[methodCall(false,simpleName('column'),'getName',[])])),expressionStatement(methodCall(false,simpleName('keys'),'add',[methodCall(false,simpleName('valueExpress'),'getObject',[])])),break('')])","block([expressionStatement(methodCall(false,simpleName('keyColumnNames'),'add',[methodCall(false,simpleName('column'),'getName',[])])),expressionStatement(methodCall(false,simpleName('keys'),'add',[methodCall(false,simpleName('valueExpress'),'getObject',[])])),break('')])"]}, {"filename" : "smallsql021_src.src.smallsql.database.LongLongList", "nodes" : ["if(infix(simpleName('idx'),' >=',simpleName('size')),throw(newObject(simpleType(simpleName('IndexOutOfBoundsException')),[infix(infix(infix(stringLiteral(' 'Index:  ''),'+',simpleName('idx')),'+',stringLiteral(' ', Size:  '')),'+',simpleName('size'))])))","if(infix(simpleName('idx'),' >=',simpleName('size')),throw(newObject(simpleType(simpleName('IndexOutOfBoundsException')),[infix(infix(infix(stringLiteral(' 'Index:  ''),'+',simpleName('idx')),'+',stringLiteral(' ', Size:  '')),'+',simpleName('size'))])))"]}, {"filename" : "smallsql021_src.src.smallsql.database.ExpressionFunctionTruncate", "nodes" : ["if(infix(simpleName('places'),' >',number('0')),block([expressionStatement(assignment(simpleName('value'),'/=',simpleName('factor')))]),block([expressionStatement(assignment(simpleName('value'),'*=',simpleName('factor')))]))","if(infix(simpleName('places'),' >',number('0')),block([for([declarationExpression(variables(int(),[variable('i',0,number('0'))]))],infix(simpleName('i'),' <',simpleName('places')),[postfix(simpleName('i'),'++')],block([expressionStatement(assignment(simpleName('factor'),'*=',number('10')))])),expressionStatement(assignment(simpleName('value'),'*=',simpleName('factor')))]),block([for([declarationExpression(variables(int(),[variable('i',0,number('0'))]))],infix(simpleName('i'),' >',simpleName('places')),[postfix(simpleName('i'),'--')],block([expressionStatement(assignment(simpleName('factor'),'*=',number('10')))])),expressionStatement(assignment(simpleName('value'),'/=',simpleName('factor')))]))"]}, {"filename" : "smallsql021_src.src.smallsql.database.ExpressionFunctionReturnP1StringAndBinary", "nodes" : ["method(float(),'getFloat',[],[simpleName('Exception')],block([if(methodCall(false,'isNull',[]),return(number('0'))),return(methodCall(false,simpleName('Float'),'parseFloat',[methodCall(false,methodCall(false,'getString',[]),'trim',[])]))]))","method(boolean(),'getBoolean',[],[simpleName('Exception')],block([if(methodCall(false,'isNull',[]),return(booleanLiteral(false))),return(methodCall(false,simpleName('Utils'),'string2boolean',[methodCall(false,methodCall(false,'getString',[]),'trim',[])]))]))","method(long(),'getLong',[],[simpleName('Exception')],block([if(methodCall(false,'isNull',[]),return(number('0'))),return(methodCall(false,simpleName('Long'),'parseLong',[methodCall(false,methodCall(false,'getString',[]),'trim',[])]))]))","method(long(),'getMoney',[],[simpleName('Exception')],block([if(methodCall(false,'isNull',[]),return(number('0'))),return(methodCall(false,simpleName('Money'),'parseMoney',[methodCall(false,methodCall(false,'getString',[]),'trim',[])]))]))","method(int(),'getInt',[],[simpleName('Exception')],block([if(methodCall(false,'isNull',[]),return(number('0'))),return(methodCall(false,simpleName('Integer'),'parseInt',[methodCall(false,methodCall(false,'getString',[]),'trim',[])]))]))","method(double(),'getDouble',[],[simpleName('Exception')],block([if(methodCall(false,'isNull',[]),return(number('0'))),return(methodCall(false,simpleName('Double'),'parseDouble',[methodCall(false,methodCall(false,'getString',[]),'trim',[])]))]))","method(simpleType(simpleName('MutableNumeric')),'getNumeric',[],[simpleName('Exception')],block([if(methodCall(false,'isNull',[]),return(null())),return(newObject(simpleType(simpleName('MutableNumeric')),[methodCall(false,methodCall(false,'getString',[]),'trim',[])]))]))"]}, {"filename" : "smallsql021_src.src.smallsql.database.LongTreeList", "nodes" : ["declarationStatement(variables(int(),[variable('octet',0,infix(cast(int(),bracket(infix(simpleName('value'),' > >',simpleName('shift')))),'&',number('0xFFFF')))]))","declarationStatement(variables(int(),[variable('octet',0,infix(cast(int(),bracket(infix(simpleName('value'),' > >',simpleName('shift')))),'&',number('0xFFFF')))]))","if(infix(qualifiedName(simpleName('listEnum'),simpleName('stack')),' >=',number('3')),block([expressionStatement(assignment(arrayAccess(qualifiedName(simpleName('listEnum'),simpleName('offsetStack')),qualifiedName(simpleName('listEnum'),simpleName('stack'))),'=',simpleName('offset'))),return(simpleName('result'))]))","if(infix(qualifiedName(simpleName('listEnum'),simpleName('stack')),' >=',number('3')),block([expressionStatement(assignment(arrayAccess(qualifiedName(simpleName('listEnum'),simpleName('offsetStack')),qualifiedName(simpleName('listEnum'),simpleName('stack'))),'=',simpleName('offset'))),return(simpleName('result'))]))","infix(bracket(infix(infix(simpleName('nextEntry'),'==',number('0')),'&&',prefix('!',simpleName('firstNode')))),'||',infix(simpleName('nextEntry'),' >',simpleName('octet')))","infix(bracket(infix(infix(simpleName('nextEntry'),'==',number('0')),'&&',prefix('!',simpleName('firstNode')))),'||',infix(simpleName('nextEntry'),' >',simpleName('octet')))","declarationStatement(variables(int(),[variable('shift',0,infix(bracket(infix(number('3'),'-',qualifiedName(simpleName('listEnum'),simpleName('stack')))),' < <',number('4')))]))","declarationStatement(variables(int(),[variable('shift',0,infix(bracket(infix(number('3'),'-',qualifiedName(simpleName('listEnum'),simpleName('stack')))),' < <',number('4')))]))","expressionStatement(assignment(arrayAccess(qualifiedName(simpleName('listEnum'),simpleName('offsetStack')),qualifiedName(simpleName('listEnum'),simpleName('stack'))),'=',infix(simpleName('offset'),'+',simpleName('pointerSize'))))","expressionStatement(assignment(arrayAccess(qualifiedName(simpleName('listEnum'),simpleName('offsetStack')),qualifiedName(simpleName('listEnum'),simpleName('stack'))),'=',infix(simpleName('offset'),'+',simpleName('pointerSize'))))"]}, {"filename" : "smallsql021_src.src.smallsql.database.Expression", "nodes" : ["method(void(),'setAlias',[parameter(simpleType(simpleName('String')),'alias',0)],[],block([expressionStatement(assignment(fieldAccess(false,this(),'alias'),'=',simpleName('alias')))]))"]}, {"filename" : "smallsql021_src.src.smallsql.database.CommandSelect", "nodes" : ["infix(infix(simpleName('src'),'!=',null()),'&&',bracket(infix(prefix('!',bracket(instanceof(simpleName('src'),simpleType(simpleName('ExpressionValue'))))),'||',prefix('!',methodCall(false,bracket(cast(simpleType(simpleName('ExpressionValue')),simpleName('src'))),'isEmpty',[])))))","infix(infix(simpleName('src'),'!=',null()),'&&',bracket(infix(prefix('!',bracket(instanceof(simpleName('src'),simpleType(simpleName('ExpressionValue'))))),'||',prefix('!',methodCall(false,bracket(cast(simpleType(simpleName('ExpressionValue')),simpleName('src'))),'isEmpty',[])))))","catch(parameter(simpleType(simpleName('Throwable')),'e',0),block([expressionStatement(methodCall(false,simpleName('con'),'rollback',[simpleName('savepoint')])),throw(methodCall(false,simpleName('SmallSQLException'),'createFromException',[simpleName('e')]))]))","catch(parameter(simpleType(simpleName('Throwable')),'e',0),block([expressionStatement(methodCall(false,simpleName('con'),'rollback',[simpleName('savepoint')])),throw(methodCall(false,simpleName('SmallSQLException'),'createFromException',[simpleName('e')]))]))","catch(parameter(simpleType(simpleName('Throwable')),'e',0),block([expressionStatement(methodCall(false,simpleName('con'),'rollback',[simpleName('savepoint')])),throw(methodCall(false,simpleName('SmallSQLException'),'createFromException',[simpleName('e')]))]))"]}, {"filename" : "smallsql021_src.src.smallsql.database.Where", "nodes" : ["method(void(),'beforeFirst',[],[simpleName('Exception')],block([expressionStatement(methodCall(false,simpleName('rowSource'),'beforeFirst',[])),expressionStatement(assignment(simpleName('row'),'=',number('0')))]))"]}, {"filename" : "smallsql021_src.src.smallsql.database.SmallSQLException", "nodes" : ["declarationStatement(variables(simpleType(simpleName('String')),[variable('message',0,methodCall(false,'translateMsg',[simpleName('messageCode'),newArray(simpleType(simpleName('Object')),[],arrayInitializer([simpleName('param0')]))]))]))","declarationStatement(variables(simpleType(simpleName('String')),[variable('message',0,methodCall(false,'translateMsg',[simpleName('messageCode'),newArray(simpleType(simpleName('Object')),[],arrayInitializer([simpleName('param0')]))]))]))"]}, {"filename" : "smallsql021_src.src.smallsql.database.LongList", "nodes" : ["if(infix(simpleName('size'),' >=',qualifiedName(simpleName('data'),simpleName('length'))),block([expressionStatement(methodCall(false,'resize',[infix(simpleName('size'),' < <',number('1'))]))]))","block([if(infix(simpleName('idx'),' >=',simpleName('size')),throw(newObject(simpleType(simpleName('IndexOutOfBoundsException')),[infix(infix(infix(stringLiteral(' 'Index:  ''),'+',simpleName('idx')),'+',stringLiteral(' ', Size:  '')),'+',simpleName('size'))]))),return(arrayAccess(simpleName('data'),simpleName('idx')))])","if(infix(simpleName('idx'),' >=',simpleName('size')),throw(newObject(simpleType(simpleName('IndexOutOfBoundsException')),[infix(infix(infix(stringLiteral(' 'Index:  ''),'+',simpleName('idx')),'+',stringLiteral(' ', Size:  '')),'+',simpleName('size'))])))"]}, {"filename" : "smallsql021_src.src.smallsql.database.ForeignKeys", "nodes" : ["if(infix(simpleName('size'),' >=',qualifiedName(simpleName('data'),simpleName('length'))),block([expressionStatement(methodCall(false,'resize',[infix(simpleName('size'),' < <',number('1'))]))]))","block([if(infix(simpleName('idx'),' >=',simpleName('size')),throw(newObject(simpleType(simpleName('IndexOutOfBoundsException')),[infix(infix(infix(stringLiteral(' 'Column index:  ''),'+',simpleName('idx')),'+',stringLiteral(' ', Size:  '')),'+',simpleName('size'))]))),return(arrayAccess(simpleName('data'),simpleName('idx')))])"]}, {"filename" : "smallsql021_src.src.smallsql.database.ExpressionFunctionTimestampAdd", "nodes" : ["declarationStatement(variables(simpleType(qualifiedName(simpleName('DateTime'),simpleName('Details'))),[variable('details2',0,newObject(simpleType(qualifiedName(simpleName('DateTime'),simpleName('Details'))),[methodCall(false,simpleName('param2'),'getLong',[])]))]))","declarationStatement(variables(simpleType(qualifiedName(simpleName('DateTime'),simpleName('Details'))),[variable('details2',0,newObject(simpleType(qualifiedName(simpleName('DateTime'),simpleName('Details'))),[methodCall(false,simpleName('param2'),'getLong',[])]))]))","declarationStatement(variables(simpleType(qualifiedName(simpleName('DateTime'),simpleName('Details'))),[variable('details2',0,newObject(simpleType(qualifiedName(simpleName('DateTime'),simpleName('Details'))),[methodCall(false,simpleName('param2'),'getLong',[])]))]))"]}, {"filename" : "smallsql021_src.src.smallsql.database.DateTime", "nodes" : ["bracket(infix(infix(infix(simpleName('year'),'%',number('100')),'!=',number('0')),'||',infix(infix(simpleName('year'),'%',number('400')),'==',number('0'))))","bracket(infix(infix(infix(simpleName('year'),'%',number('100')),'!=',number('0')),'||',infix(infix(simpleName('year'),'%',number('400')),'==',number('0'))))","expressionStatement(methodCall(false,simpleName('buf'),'append',[conditional(infix(qualifiedName(simpleName('details'),simpleName('hour')),' <',number('12')),stringLiteral(' 'AM ''),stringLiteral(' 'PM ''))]))","expressionStatement(methodCall(false,simpleName('buf'),'append',[conditional(infix(qualifiedName(simpleName('details'),simpleName('hour')),' <',number('12')),stringLiteral(' 'AM ''),stringLiteral(' 'PM ''))]))","expressionStatement(methodCall(false,simpleName('buf'),'append',[conditional(infix(qualifiedName(simpleName('details'),simpleName('hour')),' <',number('12')),stringLiteral(' 'AM ''),stringLiteral(' 'PM ''))]))","if(infix(simpleName('t'),' <',number('0')),block([expressionStatement(assignment(simpleName('t'),'+=',number('86400000'))),expressionStatement(postfix(simpleName('d'),'--'))]))","if(infix(simpleName('t'),' <',number('0')),block([expressionStatement(assignment(simpleName('t'),'+=',number('86400000'))),expressionStatement(postfix(simpleName('d'),'--'))]))"]}, {"filename" : "smallsql021_src.src.smallsql.database.IndexDescriptions", "nodes" : ["if(infix(simpleName('size'),' >=',qualifiedName(simpleName('data'),simpleName('length'))),block([expressionStatement(methodCall(false,'resize',[infix(simpleName('size'),' < <',number('1'))]))]))","block([if(infix(simpleName('idx'),' >=',simpleName('size')),throw(newObject(simpleType(simpleName('IndexOutOfBoundsException')),[infix(infix(infix(stringLiteral(' 'Column index:  ''),'+',simpleName('idx')),'+',stringLiteral(' ', Size:  '')),'+',simpleName('size'))]))),return(arrayAccess(simpleName('data'),simpleName('idx')))])"]}, {"filename" : "smallsql021_src.src.smallsql.database.Database", "nodes" : ["declarationStatement(variables(arrayType(arrayType(simpleType(simpleName('Object')))),[variable('result',0,newArray(simpleType(simpleName('Object')),[methodCall(false,simpleName('rows'),'size',[])]))]))","declarationStatement(variables(arrayType(arrayType(simpleType(simpleName('Object')))),[variable('result',0,newArray(simpleType(simpleName('Object')),[methodCall(false,simpleName('rows'),'size',[])]))]))","declarationStatement(variables(arrayType(arrayType(simpleType(simpleName('Object')))),[variable('result',0,newArray(simpleType(simpleName('Object')),[methodCall(false,simpleName('rows'),'size',[])]))]))","declarationStatement(variables(arrayType(arrayType(simpleType(simpleName('Object')))),[variable('result',0,newArray(simpleType(simpleName('Object')),[methodCall(false,simpleName('rows'),'size',[])]))]))","declarationStatement(variables(arrayType(arrayType(simpleType(simpleName('Object')))),[variable('result',0,newArray(simpleType(simpleName('Object')),[methodCall(false,simpleName('rows'),'size',[])]))]))"]}, {"filename" : "smallsql021_src.src.smallsql.database.TableResult", "nodes" : ["expressionStatement(assignment(simpleName('store'),'=',methodCall(false,bracket(cast(simpleType(simpleName('StorePageLink')),methodCall(false,simpleName('insertStorePages'),'get',[cast(int(),bracket(infix(simpleName('filePos'),'&',number('0x3FFFFFFFFFFFFFFFL'))))]))),'getStore',[simpleName('table'),simpleName('con'),simpleName('lock')])))","expressionStatement(assignment(simpleName('store'),'=',methodCall(false,bracket(cast(simpleType(simpleName('StorePageLink')),methodCall(false,simpleName('insertStorePages'),'get',[cast(int(),bracket(infix(simpleName('filePos'),'&',number('0x3FFFFFFFFFFFFFFFL'))))]))),'getStore',[simpleName('table'),simpleName('con'),simpleName('lock')])))"]}, {"filename" : "smallsql021_src.src.smallsql.database.ExpressionFunctionTimestampDiff", "nodes" : ["method(simpleType(simpleName('MutableNumeric')),'getNumeric',[],[simpleName('Exception')],block([if(methodCall(false,'isNull',[]),return(null())),return(newObject(simpleType(simpleName('MutableNumeric')),[methodCall(false,'getInt',[])]))]))","declarationStatement(variables(simpleType(qualifiedName(simpleName('DateTime'),simpleName('Details'))),[variable('details1',0,newObject(simpleType(qualifiedName(simpleName('DateTime'),simpleName('Details'))),[methodCall(false,simpleName('param1'),'getLong',[])]))]))","declarationStatement(variables(simpleType(qualifiedName(simpleName('DateTime'),simpleName('Details'))),[variable('details1',0,newObject(simpleType(qualifiedName(simpleName('DateTime'),simpleName('Details'))),[methodCall(false,simpleName('param1'),'getLong',[])]))]))","declarationStatement(variables(simpleType(qualifiedName(simpleName('DateTime'),simpleName('Details'))),[variable('details1',0,newObject(simpleType(qualifiedName(simpleName('DateTime'),simpleName('Details'))),[methodCall(false,simpleName('param1'),'getLong',[])]))]))","declarationStatement(variables(simpleType(qualifiedName(simpleName('DateTime'),simpleName('Details'))),[variable('details2',0,newObject(simpleType(qualifiedName(simpleName('DateTime'),simpleName('Details'))),[methodCall(false,simpleName('param2'),'getLong',[])]))]))","declarationStatement(variables(simpleType(qualifiedName(simpleName('DateTime'),simpleName('Details'))),[variable('details2',0,newObject(simpleType(qualifiedName(simpleName('DateTime'),simpleName('Details'))),[methodCall(false,simpleName('param2'),'getLong',[])]))]))","declarationStatement(variables(simpleType(qualifiedName(simpleName('DateTime'),simpleName('Details'))),[variable('details2',0,newObject(simpleType(qualifiedName(simpleName('DateTime'),simpleName('Details'))),[methodCall(false,simpleName('param2'),'getLong',[])]))]))","method(simpleType(simpleName('Object')),'getObject',[],[simpleName('Exception')],block([if(methodCall(false,'isNull',[]),return(null())),return(methodCall(false,simpleName('Utils'),'getInteger',[methodCall(false,'getInt',[])]))]))","method(simpleType(simpleName('String')),'getString',[],[simpleName('Exception')],block([if(methodCall(false,'isNull',[]),return(null())),return(methodCall(false,simpleName('String'),'valueOf',[methodCall(false,'getInt',[])]))]))"]}, {"filename" : "smallsql021_src.src.smallsql.junit.BasicTestCase", "nodes" : ["method(boolean(),'string2boolean',[parameter(simpleType(simpleName('String')),'val',0)],[],block([try(block([return(infix(methodCall(false,simpleName('Double'),'parseDouble',[simpleName('val')]),'!=',number('0')))]),[catch(parameter(simpleType(simpleName('NumberFormatException')),'e',0),block([]))]),return(infix(infix(methodCall(false,stringLiteral(' 'true ''),'equalsIgnoreCase',[simpleName('val')]),'||',methodCall(false,stringLiteral(' 'yes ''),'equalsIgnoreCase',[simpleName('val')])),'||',methodCall(false,stringLiteral(' 't ''),'equalsIgnoreCase',[simpleName('val')])))]))","method(simpleType(simpleName('String')),'bytes2hex',[parameter(arrayType(byte()),'bytes',0)],[],block([declarationStatement(variables(simpleType(simpleName('StringBuffer')),[variable('buf',0,newObject(simpleType(simpleName('StringBuffer')),[infix(qualifiedName(simpleName('bytes'),simpleName('length')),' < <',number('1'))]))])),for([declarationExpression(variables(int(),[variable('i',0,number('0'))]))],infix(simpleName('i'),' <',qualifiedName(simpleName('bytes'),simpleName('length'))),[postfix(simpleName('i'),'++')],block([expressionStatement(methodCall(false,simpleName('buf'),'append',[arrayAccess(simpleName('digits'),infix(bracket(infix(arrayAccess(simpleName('bytes'),simpleName('i')),' > >',number('4'))),'&',number('0x0F')))])),expressionStatement(methodCall(false,simpleName('buf'),'append',[arrayAccess(simpleName('digits'),infix(bracket(arrayAccess(simpleName('bytes'),simpleName('i'))),'&',number('0x0F')))]))])),return(methodCall(false,simpleName('buf'),'toString',[]))]))","for([],infix(simpleName('k'),' >=',number('0')),[postfix(simpleName('k'),'--')],if(infix(arrayAccess(simpleName('tmp'),simpleName('k')),'!=',number('0')),break('')))","for([],infix(simpleName('k'),' >=',number('0')),[postfix(simpleName('k'),'--')],if(infix(arrayAccess(simpleName('tmp'),simpleName('k')),'!=',number('0')),break('')))","field(arrayType(char()),[variable('digits',0,arrayInitializer([characterLiteral(' '0 ''),characterLiteral(' '1 ''),characterLiteral(' '2 ''),characterLiteral(' '3 ''),characterLiteral(' '4 ''),characterLiteral(' '5 ''),characterLiteral(' '6 ''),characterLiteral(' '7 ''),characterLiteral(' '8 ''),characterLiteral(' '9 ''),characterLiteral(' 'A ''),characterLiteral(' 'B ''),characterLiteral(' 'C ''),characterLiteral(' 'D ''),characterLiteral(' 'E ''),characterLiteral(' 'F '')]))])","declarationStatement(variables(simpleType(simpleName('String')),[variable('message',0,infix(infix(infix(infix(stringLiteral(' 'Check DisplaySize:  ''),'+',simpleName('expectedLen')),'+',stringLiteral(' '!= '')),'+',qualifiedName(simpleName('Integer'),simpleName('MAX_VALUE'))),'+',stringLiteral(' ') '')))]))","declarationStatement(variables(simpleType(simpleName('String')),[variable('message',0,infix(infix(infix(infix(stringLiteral(' 'Check DisplaySize:  ''),'+',simpleName('expectedLen')),'+',stringLiteral(' '!= '')),'+',qualifiedName(simpleName('Integer'),simpleName('MAX_VALUE'))),'+',stringLiteral(' ') '')))]))"]}, {"filename" : "smallsql021_src.src.smallsql.database.Command", "nodes" : ["catch(parameter(simpleType(simpleName('Throwable')),'e',0),block([expressionStatement(methodCall(false,simpleName('con'),'rollback',[simpleName('savepoint')])),throw(methodCall(false,simpleName('SmallSQLException'),'createFromException',[simpleName('e')]))]))"]}, {"filename" : "smallsql021_src.src.smallsql.database.ExpressionFunctionDayOfMonth", "nodes" : ["declarationStatement(variables(simpleType(qualifiedName(simpleName('DateTime'),simpleName('Details'))),[variable('details',0,newObject(simpleType(qualifiedName(simpleName('DateTime'),simpleName('Details'))),[methodCall(false,simpleName('param1'),'getLong',[])]))]))"]}, {"filename" : "smallsql021_src.src.smallsql.database.ExpressionFunctionLCase", "nodes" : ["method(arrayType(byte()),'getBytes',[],[simpleName('Exception')],block([if(methodCall(false,'isNull',[]),return(null())),return(methodCall(false,methodCall(false,'getString',[]),'getBytes',[]))]))"]}, {"filename" : "smallsql021_src.src.smallsql.junit.TestScrollable", "nodes" : ["try(block([expressionStatement(methodCall(false,simpleName('rs'),'getString',[stringLiteral(' 'v '')])),expressionStatement(methodCall(false,'fail',[stringLiteral(' 'SQLException  'No current row ' should be throw '')]))]),[catch(parameter(simpleType(simpleName('SQLException')),'ex',0),block([expressionStatement(methodCall(false,'assertSQLException',[stringLiteral(' '01000 ''),number('0'),simpleName('ex')]))]))])","try(block([expressionStatement(methodCall(false,simpleName('rs'),'getString',[stringLiteral(' 'v '')])),expressionStatement(methodCall(false,'fail',[stringLiteral(' 'SQLException  'No current row ' should be throw '')]))]),[catch(parameter(simpleType(simpleName('SQLException')),'ex',0),block([expressionStatement(methodCall(false,'assertSQLException',[stringLiteral(' '01000 ''),number('0'),simpleName('ex')]))]))])","try(block([expressionStatement(methodCall(false,simpleName('rs'),'getString',[stringLiteral(' 'v '')])),expressionStatement(methodCall(false,'fail',[stringLiteral(' 'SQLException  'No current row ' should be throw '')]))]),[catch(parameter(simpleType(simpleName('SQLException')),'ex',0),block([expressionStatement(methodCall(false,'assertSQLException',[stringLiteral(' '01000 ''),number('0'),simpleName('ex')]))]))])","try(block([expressionStatement(methodCall(false,simpleName('rs'),'getString',[stringLiteral(' 'v '')])),expressionStatement(methodCall(false,'fail',[stringLiteral(' 'SQLException  'No current row ' should be throw '')]))]),[catch(parameter(simpleType(simpleName('SQLException')),'ex',0),block([expressionStatement(methodCall(false,'assertSQLException',[stringLiteral(' '01000 ''),number('0'),simpleName('ex')]))]))])","declarationStatement(variables(simpleType(simpleName('Statement')),[variable('st',0,methodCall(false,simpleName('con'),'createStatement',[qualifiedName(simpleName('ResultSet'),simpleName('TYPE_SCROLL_SENSITIVE')),qualifiedName(simpleName('ResultSet'),simpleName('CONCUR_UPDATABLE'))]))]))","declarationStatement(variables(simpleType(simpleName('Statement')),[variable('st',0,methodCall(false,simpleName('con'),'createStatement',[qualifiedName(simpleName('ResultSet'),simpleName('TYPE_SCROLL_SENSITIVE')),qualifiedName(simpleName('ResultSet'),simpleName('CONCUR_UPDATABLE'))]))]))","declarationStatement(variables(simpleType(simpleName('Statement')),[variable('st',0,methodCall(false,simpleName('con'),'createStatement',[qualifiedName(simpleName('ResultSet'),simpleName('TYPE_SCROLL_SENSITIVE')),qualifiedName(simpleName('ResultSet'),simpleName('CONCUR_UPDATABLE'))]))]))","declarationStatement(variables(simpleType(simpleName('Statement')),[variable('st',0,methodCall(false,simpleName('con'),'createStatement',[qualifiedName(simpleName('ResultSet'),simpleName('TYPE_SCROLL_SENSITIVE')),qualifiedName(simpleName('ResultSet'),simpleName('CONCUR_UPDATABLE'))]))]))","declarationStatement(variables(simpleType(simpleName('Statement')),[variable('st',0,methodCall(false,simpleName('con'),'createStatement',[qualifiedName(simpleName('ResultSet'),simpleName('TYPE_SCROLL_SENSITIVE')),qualifiedName(simpleName('ResultSet'),simpleName('CONCUR_UPDATABLE'))]))]))","declarationStatement(variables(simpleType(simpleName('Statement')),[variable('st',0,methodCall(false,simpleName('con'),'createStatement',[qualifiedName(simpleName('ResultSet'),simpleName('TYPE_SCROLL_SENSITIVE')),qualifiedName(simpleName('ResultSet'),simpleName('CONCUR_UPDATABLE'))]))]))"]}, {"filename" : "smallsql021_src.src.smallsql.junit.TestOrderBy", "nodes" : ["expressionStatement(methodCall(false,'assertTrue',[infix(infix(simpleName('oldValue'),'+',stringLiteral(' ' < '')),'+',simpleName('newValue')),infix(methodCall(false,simpleName('oldValue'),'compareTo',[simpleName('newValue')]),' <',number('0'))]))","expressionStatement(methodCall(false,'assertTrue',[infix(infix(simpleName('oldValue'),'+',stringLiteral(' ' < '')),'+',simpleName('newValue')),infix(methodCall(false,simpleName('oldValue'),'compareTo',[simpleName('newValue')]),' <',number('0'))]))","while(infix(infix(simpleName('oldValue'),'!=',null()),'&&',methodCall(false,simpleName('rs'),'next',[])),block([declarationStatement(variables(simpleType(simpleName('String')),[variable('newValue',0,methodCall(false,simpleName('rs'),'getString',[stringLiteral(' 'v '')]))])),if(infix(simpleName('newValue'),'!=',null()),block([expressionStatement(methodCall(false,'assertTrue',[infix(methodCall(false,simpleName('oldValue'),'compareTo',[simpleName('newValue')]),' >',number('0'))])),expressionStatement(postfix(simpleName('count'),'++'))])),expressionStatement(assignment(simpleName('oldValue'),'=',simpleName('newValue')))]))","while(infix(infix(simpleName('oldValue'),'!=',null()),'&&',methodCall(false,simpleName('rs'),'next',[])),block([declarationStatement(variables(simpleType(simpleName('String')),[variable('newValue',0,methodCall(false,simpleName('rs'),'getString',[stringLiteral(' 'v '')]))])),if(infix(simpleName('newValue'),'!=',null()),block([expressionStatement(methodCall(false,'assertTrue',[infix(methodCall(false,simpleName('oldValue'),'compareTo',[simpleName('newValue')]),' >',number('0'))])),expressionStatement(postfix(simpleName('count'),'++'))])),expressionStatement(assignment(simpleName('oldValue'),'=',simpleName('newValue')))]))","while(methodCall(false,simpleName('rs'),'next',[]),block([declarationStatement(variables(simpleType(simpleName('String')),[variable('newValue',0,methodCall(false,simpleName('rs'),'getString',[stringLiteral(' 'v '')]))])),expressionStatement(methodCall(false,'assertTrue',[infix(methodCall(false,simpleName('oldValue'),'compareTo',[simpleName('newValue')]),' <',number('0'))])),expressionStatement(assignment(simpleName('oldValue'),'=',simpleName('newValue'))),expressionStatement(postfix(simpleName('count'),'++'))]))","while(methodCall(false,simpleName('rs'),'next',[]),block([declarationStatement(variables(simpleType(simpleName('String')),[variable('newValue',0,methodCall(false,simpleName('rs'),'getString',[stringLiteral(' 'v '')]))])),expressionStatement(methodCall(false,'assertTrue',[infix(methodCall(false,simpleName('oldValue'),'compareTo',[simpleName('newValue')]),' <',number('0'))])),expressionStatement(assignment(simpleName('oldValue'),'=',simpleName('newValue'))),expressionStatement(postfix(simpleName('count'),'++'))]))","declarationStatement(variables(simpleType(simpleName('Statement')),[variable('st',0,methodCall(false,simpleName('con'),'createStatement',[qualifiedName(simpleName('ResultSet'),simpleName('TYPE_SCROLL_SENSITIVE')),qualifiedName(simpleName('ResultSet'),simpleName('CONCUR_UPDATABLE'))]))]))","declarationStatement(variables(simpleType(simpleName('Statement')),[variable('st',0,methodCall(false,simpleName('con'),'createStatement',[qualifiedName(simpleName('ResultSet'),simpleName('TYPE_SCROLL_SENSITIVE')),qualifiedName(simpleName('ResultSet'),simpleName('CONCUR_UPDATABLE'))]))]))","declarationStatement(variables(simpleType(simpleName('Statement')),[variable('st',0,methodCall(false,simpleName('con'),'createStatement',[qualifiedName(simpleName('ResultSet'),simpleName('TYPE_SCROLL_SENSITIVE')),qualifiedName(simpleName('ResultSet'),simpleName('CONCUR_UPDATABLE'))]))]))","if(infix(simpleName('newValue'),'!=',null()),block([expressionStatement(methodCall(false,'assertTrue',[infix(methodCall(false,simpleName('oldValue'),'compareTo',[simpleName('newValue')]),' >',number('0'))])),expressionStatement(postfix(simpleName('count'),'++'))]))","if(infix(simpleName('newValue'),'!=',null()),block([expressionStatement(methodCall(false,'assertTrue',[infix(methodCall(false,simpleName('oldValue'),'compareTo',[simpleName('newValue')]),' >',number('0'))])),expressionStatement(postfix(simpleName('count'),'++'))]))","if(infix(simpleName('newValue'),'!=',null()),block([expressionStatement(methodCall(false,'assertTrue',[infix(methodCall(false,simpleName('oldValue'),'compareTo',[simpleName('newValue')]),' >',number('0'))])),expressionStatement(postfix(simpleName('count'),'++'))]))","block([expressionStatement(assignment(simpleName('oldValue'),'=',methodCall(false,simpleName('rs'),'getBoolean',[stringLiteral(' 'b '')]))),expressionStatement(methodCall(false,'assertFalse',[methodCall(false,simpleName('rs'),'wasNull',[])])),expressionStatement(postfix(simpleName('count'),'++'))])","block([expressionStatement(assignment(simpleName('oldValue'),'=',methodCall(false,simpleName('rs'),'getBoolean',[stringLiteral(' 'b '')]))),expressionStatement(methodCall(false,'assertFalse',[methodCall(false,simpleName('rs'),'wasNull',[])])),expressionStatement(postfix(simpleName('count'),'++'))])","while(methodCall(false,simpleName('rs'),'next',[]),block([expressionStatement(methodCall(false,'assertTrue',[infix(methodCall(false,simpleName('oldValue'),'compareTo',[cast(simpleType(simpleName('Integer')),methodCall(false,simpleName('rs'),'getObject',[stringLiteral(' 'i '')]))]),' <',number('0'))])),expressionStatement(assignment(simpleName('oldValue'),'=',cast(simpleType(simpleName('Integer')),methodCall(false,simpleName('rs'),'getObject',[stringLiteral(' 'i '')])))),expressionStatement(postfix(simpleName('count'),'++'))]))","while(methodCall(false,simpleName('rs'),'next',[]),block([expressionStatement(methodCall(false,'assertTrue',[infix(methodCall(false,simpleName('oldValue'),'compareTo',[cast(simpleType(simpleName('Integer')),methodCall(false,simpleName('rs'),'getObject',[stringLiteral(' 'i '')]))]),' <',number('0'))])),expressionStatement(assignment(simpleName('oldValue'),'=',cast(simpleType(simpleName('Integer')),methodCall(false,simpleName('rs'),'getObject',[stringLiteral(' 'i '')])))),expressionStatement(postfix(simpleName('count'),'++'))]))"]}, {"filename" : "smallsql021_src.src.smallsql.database.Table", "nodes" : ["if(infix(methodCall(false,simpleName('serializeConnections'),'size',[]),' >',number('0')),block([declarationStatement(variables(simpleType(simpleName('Iterator')),[variable('values',0,methodCall(false,methodCall(false,simpleName('locks'),'values',[]),'iterator',[]))])),while(methodCall(false,simpleName('values'),'hasNext',[]),block([declarationStatement(variables(simpleType(simpleName('TableStorePage')),[variable('lock',0,cast(simpleType(simpleName('TableStorePage')),methodCall(false,simpleName('values'),'next',[])))])),if(infix(qualifiedName(simpleName('lock'),simpleName('con')),'!=',simpleName('con')),return(null()))]))]))","if(infix(methodCall(false,simpleName('serializeConnections'),'size',[]),' >',number('0')),block([declarationStatement(variables(simpleType(simpleName('Iterator')),[variable('values',0,methodCall(false,methodCall(false,simpleName('locks'),'values',[]),'iterator',[]))])),while(methodCall(false,simpleName('values'),'hasNext',[]),block([declarationStatement(variables(simpleType(simpleName('TableStorePage')),[variable('lock',0,cast(simpleType(simpleName('TableStorePage')),methodCall(false,simpleName('values'),'next',[])))])),if(infix(qualifiedName(simpleName('lock'),simpleName('con')),'!=',simpleName('con')),return(null()))]))]))","declarationStatement(variables(simpleType(simpleName('TableStorePage')),[variable('lock',0,newObject(simpleType(simpleName('TableStorePage')),[simpleName('con'),this(),simpleName('LOCK_TAB'),simpleName('page')]))]))","declarationStatement(variables(simpleType(simpleName('TableStorePage')),[variable('lock',0,newObject(simpleType(simpleName('TableStorePage')),[simpleName('con'),this(),simpleName('LOCK_TAB'),simpleName('page')]))]))","block([declarationStatement(variables(simpleType(simpleName('Iterator')),[variable('values',0,methodCall(false,methodCall(false,simpleName('locks'),'values',[]),'iterator',[]))])),while(methodCall(false,simpleName('values'),'hasNext',[]),block([declarationStatement(variables(simpleType(simpleName('TableStorePage')),[variable('lock',0,cast(simpleType(simpleName('TableStorePage')),methodCall(false,simpleName('values'),'next',[])))])),if(infix(qualifiedName(simpleName('lock'),simpleName('con')),'!=',simpleName('con')),return(null()))]))])","block([declarationStatement(variables(simpleType(simpleName('Iterator')),[variable('values',0,methodCall(false,methodCall(false,simpleName('locks'),'values',[]),'iterator',[]))])),while(methodCall(false,simpleName('values'),'hasNext',[]),block([declarationStatement(variables(simpleType(simpleName('TableStorePage')),[variable('lock',0,cast(simpleType(simpleName('TableStorePage')),methodCall(false,simpleName('values'),'next',[])))])),if(infix(qualifiedName(simpleName('lock'),simpleName('con')),'!=',simpleName('con')),return(null()))]))])","block([declarationStatement(variables(simpleType(simpleName('Iterator')),[variable('values',0,methodCall(false,methodCall(false,simpleName('locks'),'values',[]),'iterator',[]))])),while(methodCall(false,simpleName('values'),'hasNext',[]),block([declarationStatement(variables(simpleType(simpleName('TableStorePage')),[variable('lock',0,cast(simpleType(simpleName('TableStorePage')),methodCall(false,simpleName('values'),'next',[])))])),if(infix(qualifiedName(simpleName('lock'),simpleName('con')),'!=',simpleName('con')),return(null()))]))])"]}, {"filename" : "smallsql021_src.src.smallsql.database.language.Language", "nodes" : ["newObject(simpleType(simpleName('HashMap')),[cast(int(),bracket(infix(qualifiedName(simpleName('MESSAGES'),simpleName('length')),'/',number('0.7'))))])","newObject(simpleType(simpleName('HashMap')),[cast(int(),bracket(infix(qualifiedName(simpleName('MESSAGES'),simpleName('length')),'/',number('0.7'))))])"]}, {"filename" : "smallsql021_src.src.smallsql.junit.TestResultSet", "nodes" : ["declarationStatement(variables(simpleType(simpleName('Statement')),[variable('st',0,methodCall(false,simpleName('con'),'createStatement',[qualifiedName(simpleName('ResultSet'),simpleName('TYPE_SCROLL_SENSITIVE')),qualifiedName(simpleName('ResultSet'),simpleName('CONCUR_UPDATABLE'))]))]))","declarationStatement(variables(simpleType(simpleName('Statement')),[variable('st',0,methodCall(false,simpleName('con'),'createStatement',[qualifiedName(simpleName('ResultSet'),simpleName('TYPE_SCROLL_SENSITIVE')),qualifiedName(simpleName('ResultSet'),simpleName('CONCUR_UPDATABLE'))]))]))","declarationStatement(variables(simpleType(simpleName('Statement')),[variable('st',0,methodCall(false,simpleName('con'),'createStatement',[qualifiedName(simpleName('ResultSet'),simpleName('TYPE_SCROLL_SENSITIVE')),qualifiedName(simpleName('ResultSet'),simpleName('CONCUR_UPDATABLE'))]))]))","declarationStatement(variables(simpleType(simpleName('Statement')),[variable('st',0,methodCall(false,simpleName('con'),'createStatement',[qualifiedName(simpleName('ResultSet'),simpleName('TYPE_SCROLL_SENSITIVE')),qualifiedName(simpleName('ResultSet'),simpleName('CONCUR_UPDATABLE'))]))]))","declarationStatement(variables(simpleType(simpleName('Statement')),[variable('st',0,methodCall(false,simpleName('con'),'createStatement',[qualifiedName(simpleName('ResultSet'),simpleName('TYPE_SCROLL_SENSITIVE')),qualifiedName(simpleName('ResultSet'),simpleName('CONCUR_UPDATABLE'))]))]))"]}, {"filename" : "smallsql021_src.src.smallsql.database.DataSources", "nodes" : ["block([if(infix(simpleName('idx'),' >=',simpleName('size')),throw(newObject(simpleType(simpleName('IndexOutOfBoundsException')),[infix(infix(infix(stringLiteral(' 'Index:  ''),'+',simpleName('idx')),'+',stringLiteral(' ', Size:  '')),'+',simpleName('size'))]))),return(arrayAccess(simpleName('data'),simpleName('idx')))])","if(infix(simpleName('idx'),' >=',simpleName('size')),throw(newObject(simpleType(simpleName('IndexOutOfBoundsException')),[infix(infix(infix(stringLiteral(' 'Index:  ''),'+',simpleName('idx')),'+',stringLiteral(' ', Size:  '')),'+',simpleName('size'))])))"]}, {"filename" : "smallsql021_src.src.smallsql.database.ExpressionFunctionReturnInt", "nodes" : ["method(simpleType(simpleName('MutableNumeric')),'getNumeric',[],[simpleName('Exception')],block([if(methodCall(false,'isNull',[]),return(null())),return(newObject(simpleType(simpleName('MutableNumeric')),[methodCall(false,'getInt',[])]))]))","method(simpleType(simpleName('Object')),'getObject',[],[simpleName('Exception')],block([if(methodCall(false,'isNull',[]),return(null())),return(methodCall(false,simpleName('Utils'),'getInteger',[methodCall(false,'getInt',[])]))]))","method(simpleType(simpleName('String')),'getString',[],[simpleName('Exception')],block([if(methodCall(false,'isNull',[]),return(null())),return(methodCall(false,simpleName('String'),'valueOf',[methodCall(false,'getInt',[])]))]))"]}, {"filename" : "smallsql021_src.src.smallsql.database.SSStatement", "nodes" : ["if(infix(simpleName('failed'),'==',null()),block([expressionStatement(assignment(simpleName('failed'),'=',newObject(simpleType(simpleName('BatchUpdateException')),[methodCall(false,simpleName('ex'),'getMessage',[]),methodCall(false,simpleName('ex'),'getSQLState',[]),methodCall(false,simpleName('ex'),'getErrorCode',[]),simpleName('result')]))),expressionStatement(methodCall(false,simpleName('failed'),'initCause',[simpleName('ex')]))]))"]}, {"filename" : "smallsql021_src.src.smallsql.database.MemoryStream", "nodes" : ["expressionStatement(assignment(arrayAccess(simpleName('puffer'),postfix(simpleName('offset'),'++')),'=',cast(byte(),bracket(infix(simpleName('value'),' > >',number('8'))))))","expressionStatement(assignment(arrayAccess(simpleName('puffer'),postfix(simpleName('offset'),'++')),'=',cast(byte(),bracket(infix(simpleName('value'),' > >',number('8'))))))","expressionStatement(assignment(arrayAccess(simpleName('puffer'),postfix(simpleName('offset'),'++')),'=',cast(byte(),bracket(infix(simpleName('value'),' > >',number('8'))))))","expressionStatement(assignment(arrayAccess(simpleName('puffer'),postfix(simpleName('offset'),'++')),'=',cast(byte(),bracket(infix(simpleName('value'),' > >',number('24'))))))","expressionStatement(assignment(arrayAccess(simpleName('puffer'),postfix(simpleName('offset'),'++')),'=',cast(byte(),bracket(infix(simpleName('value'),' > >',number('24'))))))","bracket(infix(bracket(infix(arrayAccess(simpleName('puffer'),postfix(simpleName('offset'),'++')),'&',number('0xFF'))),' < <',number('8')))","bracket(infix(bracket(infix(arrayAccess(simpleName('puffer'),postfix(simpleName('offset'),'++')),'&',number('0xFF'))),' < <',number('8')))","bracket(infix(bracket(infix(arrayAccess(simpleName('puffer'),postfix(simpleName('offset'),'++')),'&',number('0xFF'))),' < <',number('8')))","bracket(infix(bracket(infix(arrayAccess(simpleName('puffer'),postfix(simpleName('offset'),'++')),'&',number('0xFF'))),' < <',number('24')))","bracket(infix(bracket(infix(arrayAccess(simpleName('puffer'),postfix(simpleName('offset'),'++')),'&',number('0xFF'))),' < <',number('24')))","bracket(infix(bracket(infix(arrayAccess(simpleName('puffer'),postfix(simpleName('offset'),'++')),'&',number('0xFF'))),' < <',number('16')))","bracket(infix(bracket(infix(arrayAccess(simpleName('puffer'),postfix(simpleName('offset'),'++')),'&',number('0xFF'))),' < <',number('16')))","expressionStatement(assignment(arrayAccess(simpleName('puffer'),postfix(simpleName('offset'),'++')),'=',cast(byte(),bracket(infix(simpleName('value'),' > >',number('16'))))))","expressionStatement(assignment(arrayAccess(simpleName('puffer'),postfix(simpleName('offset'),'++')),'=',cast(byte(),bracket(infix(simpleName('value'),' > >',number('16'))))))","bracket(cast(long(),bracket(infix(arrayAccess(simpleName('puffer'),postfix(simpleName('offset'),'++')),'&',number('0xFF')))))","bracket(cast(long(),bracket(infix(arrayAccess(simpleName('puffer'),postfix(simpleName('offset'),'++')),'&',number('0xFF')))))","bracket(cast(long(),bracket(infix(arrayAccess(simpleName('puffer'),postfix(simpleName('offset'),'++')),'&',number('0xFF')))))","bracket(cast(long(),bracket(infix(arrayAccess(simpleName('puffer'),postfix(simpleName('offset'),'++')),'&',number('0xFF')))))"]}, {"filename" : "smallsql021_src.src.smallsql.database.ExpressionArithmetic", "nodes" : ["infix(methodCall(false,'getDataType',[methodCall(false,simpleName('right'),'getDataType',[]),qualifiedName(simpleName('SQLTokenizer'),simpleName('INT'))]),'==',qualifiedName(simpleName('SQLTokenizer'),simpleName('INT')))","infix(methodCall(false,'getDataType',[methodCall(false,simpleName('right'),'getDataType',[]),qualifiedName(simpleName('SQLTokenizer'),simpleName('INT'))]),'==',qualifiedName(simpleName('SQLTokenizer'),simpleName('INT')))"]}, {"filename" : "smallsql021_src.src.smallsql.database.ExpressionFunctionMonth", "nodes" : ["declarationStatement(variables(simpleType(qualifiedName(simpleName('DateTime'),simpleName('Details'))),[variable('details',0,newObject(simpleType(qualifiedName(simpleName('DateTime'),simpleName('Details'))),[methodCall(false,simpleName('param1'),'getLong',[])]))]))"]}, {"filename" : "smallsql021_src.src.smallsql.database.TableViewResult", "nodes" : ["method(void(),'setAlias',[parameter(simpleType(simpleName('String')),'alias',0)],[],block([expressionStatement(assignment(fieldAccess(false,this(),'alias'),'=',simpleName('alias')))]))"]}, {"filename" : "smallsql021_src.src.smallsql.database.Utils", "nodes" : ["method(boolean(),'string2boolean',[parameter(simpleType(simpleName('String')),'val',0)],[],block([try(block([return(infix(methodCall(false,simpleName('Double'),'parseDouble',[simpleName('val')]),'!=',number('0')))]),[catch(parameter(simpleType(simpleName('NumberFormatException')),'e',0),block([]))]),return(infix(infix(methodCall(false,stringLiteral(' 'true ''),'equalsIgnoreCase',[simpleName('val')]),'||',methodCall(false,stringLiteral(' 'yes ''),'equalsIgnoreCase',[simpleName('val')])),'||',methodCall(false,stringLiteral(' 't ''),'equalsIgnoreCase',[simpleName('val')])))]))","cast(byte(),bracket(infix(bracket(infix(methodCall(false,'hexDigit2int',[arrayAccess(simpleName('hex'),postfix(simpleName('offset'),'++'))]),' < <',number('4'))),'|',methodCall(false,'hexDigit2int',[arrayAccess(simpleName('hex'),postfix(simpleName('offset'),'++'))]))))","cast(byte(),bracket(infix(bracket(infix(methodCall(false,'hexDigit2int',[arrayAccess(simpleName('hex'),postfix(simpleName('offset'),'++'))]),' < <',number('4'))),'|',methodCall(false,'hexDigit2int',[arrayAccess(simpleName('hex'),postfix(simpleName('offset'),'++'))]))))","method(simpleType(simpleName('String')),'bytes2hex',[parameter(arrayType(byte()),'bytes',0)],[],block([declarationStatement(variables(simpleType(simpleName('StringBuffer')),[variable('buf',0,newObject(simpleType(simpleName('StringBuffer')),[infix(qualifiedName(simpleName('bytes'),simpleName('length')),' < <',number('1'))]))])),for([declarationExpression(variables(int(),[variable('i',0,number('0'))]))],infix(simpleName('i'),' <',qualifiedName(simpleName('bytes'),simpleName('length'))),[postfix(simpleName('i'),'++')],block([expressionStatement(methodCall(false,simpleName('buf'),'append',[arrayAccess(simpleName('digits'),infix(bracket(infix(arrayAccess(simpleName('bytes'),simpleName('i')),' > >',number('4'))),'&',number('0x0F')))])),expressionStatement(methodCall(false,simpleName('buf'),'append',[arrayAccess(simpleName('digits'),infix(bracket(arrayAccess(simpleName('bytes'),simpleName('i'))),'&',number('0x0F')))]))])),return(methodCall(false,simpleName('buf'),'toString',[]))]))","for([declarationExpression(variables(int(),[variable('i',0,number('0'))]))],infix(simpleName('i'),' <',simpleName('length')),[postfix(simpleName('i'),'++')],block([expressionStatement(assignment(simpleName('result'),'=',infix(bracket(infix(simpleName('result'),' < <',number('8'))),'|',bracket(infix(arrayAccess(simpleName('bytes'),simpleName('i')),'&',number('0xFF'))))))]))","for([declarationExpression(variables(int(),[variable('i',0,number('0'))]))],infix(simpleName('i'),' <',simpleName('length')),[postfix(simpleName('i'),'++')],block([expressionStatement(assignment(simpleName('result'),'=',infix(bracket(infix(simpleName('result'),' < <',number('8'))),'|',bracket(infix(arrayAccess(simpleName('bytes'),simpleName('i')),'&',number('0xFF'))))))]))","field(arrayType(char()),[variable('digits',0,arrayInitializer([characterLiteral(' '0 ''),characterLiteral(' '1 ''),characterLiteral(' '2 ''),characterLiteral(' '3 ''),characterLiteral(' '4 ''),characterLiteral(' '5 ''),characterLiteral(' '6 ''),characterLiteral(' '7 ''),characterLiteral(' '8 ''),characterLiteral(' '9 ''),characterLiteral(' 'A ''),characterLiteral(' 'B ''),characterLiteral(' 'C ''),characterLiteral(' 'D ''),characterLiteral(' 'E ''),characterLiteral(' 'F '')]))])"]}, {"filename" : "smallsql021_src.src.smallsql.database.IndexScrollStatus", "nodes" : ["expressionStatement(methodCall(false,simpleName('nodeStack'),'push',[newObject(simpleType(simpleName('IndexNodeScrollStatus')),[simpleName('node'),qualifiedName(simpleName('status'),simpleName('asc')),simpleName('scroll'),simpleName('level')])]))","expressionStatement(methodCall(false,simpleName('nodeStack'),'push',[newObject(simpleType(simpleName('IndexNodeScrollStatus')),[simpleName('node'),qualifiedName(simpleName('status'),simpleName('asc')),simpleName('scroll'),simpleName('level')])]))","if(infix(qualifiedName(simpleName('status'),simpleName('nodeValue')),'!=',null()),block([if(instanceof(qualifiedName(simpleName('status'),simpleName('nodeValue')),simpleType(simpleName('IndexNode'))),block([expressionStatement(postfix(simpleName('level'),'++')),expressionStatement(methodCall(false,simpleName('nodeStack'),'push',[newObject(simpleType(simpleName('IndexNodeScrollStatus')),[cast(simpleType(simpleName('IndexNode')),qualifiedName(simpleName('status'),simpleName('nodeValue'))),bracket(infix(methodCall(false,methodCall(false,simpleName('expressions'),'get',[simpleName('level')]),'getAlias',[]),'!=',qualifiedName(simpleName('SQLTokenizer'),simpleName('DESC_STR')))),simpleName('scroll'),simpleName('level')])])),continue()]),return(methodCall(false,'getReturnValue',[qualifiedName(simpleName('status'),simpleName('nodeValue'))])))]))","if(infix(qualifiedName(simpleName('status'),simpleName('nodeValue')),'!=',null()),block([if(instanceof(qualifiedName(simpleName('status'),simpleName('nodeValue')),simpleType(simpleName('IndexNode'))),block([expressionStatement(postfix(simpleName('level'),'++')),expressionStatement(methodCall(false,simpleName('nodeStack'),'push',[newObject(simpleType(simpleName('IndexNodeScrollStatus')),[cast(simpleType(simpleName('IndexNode')),qualifiedName(simpleName('status'),simpleName('nodeValue'))),bracket(infix(methodCall(false,methodCall(false,simpleName('expressions'),'get',[simpleName('level')]),'getAlias',[]),'!=',qualifiedName(simpleName('SQLTokenizer'),simpleName('DESC_STR')))),simpleName('scroll'),simpleName('level')])])),continue()]),return(methodCall(false,'getReturnValue',[qualifiedName(simpleName('status'),simpleName('nodeValue'))])))]))"]}, {"filename" : "smallsql021_src.src.smallsql.junit.TestThreads", "nodes" : ["for([declarationExpression(variables(int(),[variable('i',0,number('0'))]))],infix(simpleName('i'),' <',methodCall(false,simpleName('threadList'),'size',[])),[postfix(simpleName('i'),'++')],block([declarationStatement(variables(simpleType(simpleName('Thread')),[variable('thread',0,cast(simpleType(simpleName('Thread')),methodCall(false,simpleName('threadList'),'get',[simpleName('i')])))])),expressionStatement(methodCall(false,simpleName('thread'),'join',[number('5000')]))]))","for([declarationExpression(variables(int(),[variable('i',0,number('0'))]))],infix(simpleName('i'),' <',methodCall(false,simpleName('threadList'),'size',[])),[postfix(simpleName('i'),'++')],block([declarationStatement(variables(simpleType(simpleName('Thread')),[variable('thread',0,cast(simpleType(simpleName('Thread')),methodCall(false,simpleName('threadList'),'get',[simpleName('i')])))])),expressionStatement(methodCall(false,simpleName('thread'),'join',[number('5000')]))]))","for([declarationExpression(variables(int(),[variable('i',0,number('0'))]))],infix(simpleName('i'),' <',methodCall(false,simpleName('threadList'),'size',[])),[postfix(simpleName('i'),'++')],block([declarationStatement(variables(simpleType(simpleName('Thread')),[variable('thread',0,cast(simpleType(simpleName('Thread')),methodCall(false,simpleName('threadList'),'get',[simpleName('i')])))])),expressionStatement(methodCall(false,simpleName('thread'),'join',[number('5000')]))]))"]}, {"filename" : "smallsql021_src.src.smallsql.database.ExpressionFunctionMinute", "nodes" : ["declarationStatement(variables(simpleType(qualifiedName(simpleName('DateTime'),simpleName('Details'))),[variable('details',0,newObject(simpleType(qualifiedName(simpleName('DateTime'),simpleName('Details'))),[methodCall(false,simpleName('param1'),'getLong',[])]))]))"]}, {"filename" : "smallsql021_src.src.smallsql.database.SSPreparedStatement", "nodes" : ["if(infix(simpleName('failed'),'==',null()),block([expressionStatement(assignment(simpleName('failed'),'=',newObject(simpleType(simpleName('BatchUpdateException')),[methodCall(false,simpleName('ex'),'getMessage',[]),methodCall(false,simpleName('ex'),'getSQLState',[]),methodCall(false,simpleName('ex'),'getErrorCode',[]),simpleName('result')]))),expressionStatement(methodCall(false,simpleName('failed'),'initCause',[simpleName('ex')]))]))"]}, {"filename" : "smallsql021_src.src.smallsql.junit.TestJoins", "nodes" : ["class('TestValue',[],[],[field(simpleType(simpleName('String')),[variable('dataType',0)]),field(simpleType(simpleName('Object')),[variable('small',0)]),field(simpleType(simpleName('Object')),[variable('large',0)])])","methodCall(false,'a',[stringLiteral(' 'blob ''),newArray(byte(),[],arrayInitializer([number('12'),number('45'),number('1')])),newArray(byte(),[],arrayInitializer([number('12'),number('45'),number('2'),number('56'),number('89')]))])","methodCall(false,'a',[stringLiteral(' 'binary(100) ''),newArray(byte(),[],arrayInitializer([number('12'),number('45'),number('1')])),newArray(byte(),[],arrayInitializer([number('12'),number('45'),number('2'),number('56'),number('89')]))])","methodCall(false,'a',[stringLiteral(' 'long raw ''),newArray(byte(),[],arrayInitializer([number('12'),number('45'),number('1')])),newArray(byte(),[],arrayInitializer([number('12'),number('45'),number('2'),number('56'),number('89')]))])","methodCall(false,'a',[stringLiteral(' 'date ''),newObject(simpleType(simpleName('Date')),[number('99'),number('1'),number('1')]),newObject(simpleType(simpleName('Date')),[number('99'),number('2'),number('2')])])","methodCall(false,'a',[stringLiteral(' 'varbinary(100) ''),newArray(byte(),[],arrayInitializer([number('12'),number('45'),number('1')])),newArray(byte(),[],arrayInitializer([number('12'),number('45'),number('2'),number('56'),number('89')]))])","methodCall(false,'a',[stringLiteral(' 'tinyint ''),newObject(simpleType(simpleName('Byte')),[cast(byte(),number('3'))]),newObject(simpleType(simpleName('Byte')),[cast(byte(),number('4'))])])","methodCall(false,'a',[stringLiteral(' 'image ''),newArray(byte(),[],arrayInitializer([number('12'),number('45'),number('1')])),newArray(byte(),[],arrayInitializer([number('12'),number('45'),number('2'),number('56'),number('89')]))])","methodCall(false,'a',[stringLiteral(' 'raw(100) ''),newArray(byte(),[],arrayInitializer([number('12'),number('45'),number('1')])),newArray(byte(),[],arrayInitializer([number('12'),number('45'),number('2'),number('56'),number('89')]))])","methodCall(false,'a',[stringLiteral(' 'timestamp ''),newObject(simpleType(simpleName('Timestamp')),[number('99'),number('1'),number('1'),number('0'),number('0'),number('0'),number('0')]),newObject(simpleType(simpleName('Timestamp')),[number('99'),number('2'),number('2'),number('0'),number('0'),number('0'),number('0')])])","declarationStatement(variables(simpleType(simpleName('PreparedStatement')),[variable('pr',0,methodCall(false,simpleName('con'),'prepareStatement',[infix(infix(stringLiteral(' 'INSERT into  ''),'+',simpleName('table')),'+',stringLiteral(' '(a,b) Values(?,?) ''))]))]))","methodCall(false,'a',[stringLiteral(' 'smallint ''),newObject(simpleType(simpleName('Short')),[cast(short(),number('3'))]),newObject(simpleType(simpleName('Short')),[cast(short(),number('4'))])])","methodCall(false,'a',[stringLiteral(' 'time ''),newObject(simpleType(simpleName('Time')),[number('9'),number('1'),number('1')]),newObject(simpleType(simpleName('Time')),[number('9'),number('2'),number('2')])])","methodCall(false,'a',[stringLiteral(' 'smalldatetime ''),newObject(simpleType(simpleName('Timestamp')),[number('99'),number('1'),number('1'),number('0'),number('0'),number('0'),number('0')]),newObject(simpleType(simpleName('Timestamp')),[number('99'),number('2'),number('2'),number('0'),number('0'),number('0'),number('0')])])","methodCall(false,'a',[stringLiteral(' 'longvarbinary ''),newArray(byte(),[],arrayInitializer([number('12'),number('45'),number('1')])),newArray(byte(),[],arrayInitializer([number('12'),number('45'),number('2'),number('56'),number('89')]))])","methodCall(false,'a',[stringLiteral(' 'byte ''),newObject(simpleType(simpleName('Byte')),[cast(byte(),number('3'))]),newObject(simpleType(simpleName('Byte')),[cast(byte(),number('4'))])])","methodCall(false,'a',[stringLiteral(' 'datetime ''),newObject(simpleType(simpleName('Timestamp')),[number('99'),number('1'),number('1'),number('0'),number('0'),number('0'),number('0')]),newObject(simpleType(simpleName('Timestamp')),[number('99'),number('2'),number('2'),number('0'),number('0'),number('0'),number('0')])])","method(simpleType(simpleName('TestValue')),'a',[parameter(simpleType(simpleName('String')),'dataType',0),parameter(simpleType(simpleName('Object')),'small',0),parameter(simpleType(simpleName('Object')),'large',0)],[],block([declarationStatement(variables(simpleType(simpleName('TestValue')),[variable('value',0,newObject(simpleType(simpleName('TestValue')),[]))])),expressionStatement(assignment(qualifiedName(simpleName('value'),simpleName('dataType')),'=',simpleName('dataType'))),expressionStatement(assignment(qualifiedName(simpleName('value'),simpleName('small')),'=',simpleName('small'))),expressionStatement(assignment(qualifiedName(simpleName('value'),simpleName('large')),'=',simpleName('large'))),return(simpleName('value'))]))"]}, {"filename" : "smallsql021_src.src.smallsql.database.Index", "nodes" : ["declarationStatement(variables(char(),[variable('digit',0,conditional(bracket(infix(simpleName('i'),' <',number('0'))),bracket(conditional(infix(simpleName('length'),'==',number('0')),cast(char(),number('1')),number('2'))),bracket(arrayAccess(simpleName('key'),simpleName('i')))))]))","declarationStatement(variables(char(),[variable('digit',0,conditional(bracket(infix(simpleName('i'),' <',number('0'))),bracket(conditional(infix(simpleName('length'),'==',number('0')),cast(char(),number('1')),number('2'))),bracket(arrayAccess(simpleName('key'),simpleName('i')))))]))","declarationStatement(variables(char(),[variable('digit',0,cast(char(),bracket(infix(simpleName('key'),' > >',bracket(infix(simpleName('i'),' < <',number('4')))))))]))","declarationStatement(variables(char(),[variable('digit',0,cast(char(),bracket(infix(simpleName('key'),' > >',bracket(infix(simpleName('i'),' < <',number('4')))))))]))","if(infix(infix(simpleName('i'),'+',number('1')),'==',simpleName('count')),return(methodCall(false,simpleName('page'),'getValue',[])),expressionStatement(assignment(simpleName('page'),'=',cast(simpleType(simpleName('IndexNode')),methodCall(false,simpleName('page'),'getValue',[])))))","if(infix(infix(simpleName('i'),'+',number('1')),'==',simpleName('count')),return(methodCall(false,simpleName('page'),'getValue',[])),expressionStatement(assignment(simpleName('page'),'=',cast(simpleType(simpleName('IndexNode')),methodCall(false,simpleName('page'),'getValue',[])))))"]}, {"filename" : "smallsql021_src.src.smallsql.junit.TestOperatoren", "nodes" : ["class('TestValue',[],[],[field(simpleType(simpleName('String')),[variable('dataType',0)]),field(simpleType(simpleName('Object')),[variable('small',0)]),field(simpleType(simpleName('Object')),[variable('large',0)])])","method(void(),'tearDown',[],[],block([try(block([declarationStatement(variables(simpleType(simpleName('Connection')),[variable('con',0,methodCall(false,simpleName('AllTests'),'getConnection',[]))])),declarationStatement(variables(simpleType(simpleName('Statement')),[variable('st',0,methodCall(false,simpleName('con'),'createStatement',[]))])),expressionStatement(methodCall(false,simpleName('st'),'execute',[infix(stringLiteral(' 'drop table  ''),'+',simpleName('table'))])),expressionStatement(methodCall(false,simpleName('st'),'close',[]))]),[catch(parameter(simpleType(simpleName('Throwable')),'e',0),block([]))])]))","methodCall(false,'a',[stringLiteral(' 'blob ''),newArray(byte(),[],arrayInitializer([number('12'),number('45'),number('1')])),newArray(byte(),[],arrayInitializer([number('12'),number('45'),number('2'),number('56'),number('89')]))])","methodCall(false,'a',[stringLiteral(' 'binary(100) ''),newArray(byte(),[],arrayInitializer([number('12'),number('45'),number('1')])),newArray(byte(),[],arrayInitializer([number('12'),number('45'),number('2'),number('56'),number('89')]))])","methodCall(false,'a',[stringLiteral(' 'long raw ''),newArray(byte(),[],arrayInitializer([number('12'),number('45'),number('1')])),newArray(byte(),[],arrayInitializer([number('12'),number('45'),number('2'),number('56'),number('89')]))])","methodCall(false,'a',[stringLiteral(' 'date ''),newObject(simpleType(simpleName('Date')),[number('99'),number('1'),number('1')]),newObject(simpleType(simpleName('Date')),[number('99'),number('2'),number('2')])])","methodCall(false,'a',[stringLiteral(' 'varbinary(100) ''),newArray(byte(),[],arrayInitializer([number('12'),number('45'),number('1')])),newArray(byte(),[],arrayInitializer([number('12'),number('45'),number('2'),number('56'),number('89')]))])","methodCall(false,'a',[stringLiteral(' 'tinyint ''),newObject(simpleType(simpleName('Byte')),[cast(byte(),number('3'))]),newObject(simpleType(simpleName('Byte')),[cast(byte(),number('4'))])])","methodCall(false,'a',[stringLiteral(' 'image ''),newArray(byte(),[],arrayInitializer([number('12'),number('45'),number('1')])),newArray(byte(),[],arrayInitializer([number('12'),number('45'),number('2'),number('56'),number('89')]))])","methodCall(false,'a',[stringLiteral(' 'raw(100) ''),newArray(byte(),[],arrayInitializer([number('12'),number('45'),number('1')])),newArray(byte(),[],arrayInitializer([number('12'),number('45'),number('2'),number('56'),number('89')]))])","methodCall(false,'a',[stringLiteral(' 'timestamp ''),newObject(simpleType(simpleName('Timestamp')),[number('99'),number('1'),number('1'),number('0'),number('0'),number('0'),number('0')]),newObject(simpleType(simpleName('Timestamp')),[number('99'),number('2'),number('2'),number('0'),number('0'),number('0'),number('0')])])","declarationStatement(variables(simpleType(simpleName('PreparedStatement')),[variable('pr',0,methodCall(false,simpleName('con'),'prepareStatement',[infix(infix(stringLiteral(' 'INSERT into  ''),'+',simpleName('table')),'+',stringLiteral(' '(a,b) Values(?,?) ''))]))]))","methodCall(false,'a',[stringLiteral(' 'smallint ''),newObject(simpleType(simpleName('Short')),[cast(short(),number('3'))]),newObject(simpleType(simpleName('Short')),[cast(short(),number('4'))])])","methodCall(false,'a',[stringLiteral(' 'time ''),newObject(simpleType(simpleName('Time')),[number('9'),number('1'),number('1')]),newObject(simpleType(simpleName('Time')),[number('9'),number('2'),number('2')])])","methodCall(false,'a',[stringLiteral(' 'smalldatetime ''),newObject(simpleType(simpleName('Timestamp')),[number('99'),number('1'),number('1'),number('0'),number('0'),number('0'),number('0')]),newObject(simpleType(simpleName('Timestamp')),[number('99'),number('2'),number('2'),number('0'),number('0'),number('0'),number('0')])])","methodCall(false,'a',[stringLiteral(' 'longvarbinary ''),newArray(byte(),[],arrayInitializer([number('12'),number('45'),number('1')])),newArray(byte(),[],arrayInitializer([number('12'),number('45'),number('2'),number('56'),number('89')]))])","methodCall(false,'a',[stringLiteral(' 'byte ''),newObject(simpleType(simpleName('Byte')),[cast(byte(),number('3'))]),newObject(simpleType(simpleName('Byte')),[cast(byte(),number('4'))])])","methodCall(false,'a',[stringLiteral(' 'datetime ''),newObject(simpleType(simpleName('Timestamp')),[number('99'),number('1'),number('1'),number('0'),number('0'),number('0'),number('0')]),newObject(simpleType(simpleName('Timestamp')),[number('99'),number('2'),number('2'),number('0'),number('0'),number('0'),number('0')])])","method(simpleType(simpleName('TestValue')),'a',[parameter(simpleType(simpleName('String')),'dataType',0),parameter(simpleType(simpleName('Object')),'small',0),parameter(simpleType(simpleName('Object')),'large',0)],[],block([declarationStatement(variables(simpleType(simpleName('TestValue')),[variable('value',0,newObject(simpleType(simpleName('TestValue')),[]))])),expressionStatement(assignment(qualifiedName(simpleName('value'),simpleName('dataType')),'=',simpleName('dataType'))),expressionStatement(assignment(qualifiedName(simpleName('value'),simpleName('small')),'=',simpleName('small'))),expressionStatement(assignment(qualifiedName(simpleName('value'),simpleName('large')),'=',simpleName('large'))),return(simpleName('value'))]))"]}, {"filename" : "smallsql021_src.src.smallsql.junit.TestDBMetaData", "nodes" : ["declarationStatement(variables(arrayType(simpleType(simpleName('String'))),[variable('colNames',0,arrayInitializer([stringLiteral(' 'TYPE_CAT ''),stringLiteral(' 'TYPE_SCHEM ''),stringLiteral(' 'TYPE_NAME ''),stringLiteral(' 'CLASS_NAME ''),stringLiteral(' 'DATA_TYPE ''),stringLiteral(' 'REMARKS '')]))]))","declarationStatement(variables(arrayType(simpleType(simpleName('String'))),[variable('colNames',0,arrayInitializer([stringLiteral(' 'PROCEDURE_CAT ''),stringLiteral(' 'PROCEDURE_SCHEM ''),stringLiteral(' 'PROCEDURE_NAME ''),stringLiteral(' ' ''),stringLiteral(' ' ''),stringLiteral(' ' ''),stringLiteral(' 'REMARKS ''),stringLiteral(' 'PROCEDURE_TYPE '')]))]))","declarationStatement(variables(arrayType(simpleType(simpleName('String'))),[variable('colNames',0,arrayInitializer([stringLiteral(' 'SCOPE ''),stringLiteral(' 'COLUMN_NAME ''),stringLiteral(' 'DATA_TYPE ''),stringLiteral(' 'TYPE_NAME ''),stringLiteral(' 'COLUMN_SIZE ''),stringLiteral(' 'BUFFER_LENGTH ''),stringLiteral(' 'DECIMAL_DIGITS ''),stringLiteral(' 'PSEUDO_COLUMN '')]))]))","arrayInitializer([stringLiteral(' 'TABLE_CAT ''),stringLiteral(' 'TABLE_SCHEM ''),stringLiteral(' 'TABLE_NAME ''),stringLiteral(' 'NON_UNIQUE ''),stringLiteral(' 'INDEX_QUALIFIER ''),stringLiteral(' 'INDEX_NAME ''),stringLiteral(' 'TYPE ''),stringLiteral(' 'ORDINAL_POSITION ''),stringLiteral(' 'COLUMN_NAME ''),stringLiteral(' 'ASC_OR_DESC ''),stringLiteral(' 'CARDINALITY ''),stringLiteral(' 'PAGES ''),stringLiteral(' 'FILTER_CONDITION '')])","declarationStatement(variables(arrayType(simpleType(simpleName('String'))),[variable('colNames',0,arrayInitializer([stringLiteral(' 'TABLE_CAT ''),stringLiteral(' 'TABLE_SCHEM ''),stringLiteral(' 'TABLE_NAME ''),stringLiteral(' 'TABLE_TYPE ''),stringLiteral(' 'REMARKS ''),stringLiteral(' 'TYPE_CAT ''),stringLiteral(' 'TYPE_SCHEM ''),stringLiteral(' 'TYPE_NAME ''),stringLiteral(' 'SELF_REFERENCING_COL_NAME ''),stringLiteral(' 'REF_GENERATION '')]))]))","declarationStatement(variables(arrayType(simpleType(simpleName('String'))),[variable('colNames',0,arrayInitializer([stringLiteral(' 'TYPE_NAME ''),stringLiteral(' 'DATA_TYPE ''),stringLiteral(' 'PRECISION ''),stringLiteral(' 'LITERAL_PREFIX ''),stringLiteral(' 'LITERAL_SUFFIX ''),stringLiteral(' 'CREATE_PARAMS ''),stringLiteral(' 'NULLABLE ''),stringLiteral(' 'CASE_SENSITIVE ''),stringLiteral(' 'SEARCHABLE ''),stringLiteral(' 'UNSIGNED_ATTRIBUTE ''),stringLiteral(' 'FIXED_PREC_SCALE ''),stringLiteral(' 'AUTO_INCREMENT ''),stringLiteral(' 'LOCAL_TYPE_NAME ''),stringLiteral(' 'MINIMUM_SCALE ''),stringLiteral(' 'MAXIMUM_SCALE ''),stringLiteral(' 'SQL_DATA_TYPE ''),stringLiteral(' 'SQL_DATETIME_SUB ''),stringLiteral(' 'NUM_PREC_RADIX '')]))]))","declarationStatement(variables(arrayType(simpleType(simpleName('String'))),[variable('colNames',0,arrayInitializer([stringLiteral(' 'TABLE_CAT ''),stringLiteral(' 'TABLE_SCHEM ''),stringLiteral(' 'TABLE_NAME ''),stringLiteral(' 'COLUMN_NAME ''),stringLiteral(' 'DATA_TYPE ''),stringLiteral(' 'TYPE_NAME ''),stringLiteral(' 'COLUMN_SIZE ''),stringLiteral(' 'BUFFER_LENGTH ''),stringLiteral(' 'DECIMAL_DIGITS ''),stringLiteral(' 'NUM_PREC_RADIX ''),stringLiteral(' 'NULLABLE ''),stringLiteral(' 'REMARKS ''),stringLiteral(' 'COLUMN_DEF ''),stringLiteral(' 'SQL_DATA_TYPE ''),stringLiteral(' 'SQL_DATETIME_SUB ''),stringLiteral(' 'CHAR_OCTET_LENGTH ''),stringLiteral(' 'ORDINAL_POSITION ''),stringLiteral(' 'IS_NULLABLE '')]))]))","declarationStatement(variables(arrayType(simpleType(simpleName('String'))),[variable('colNames',0,arrayInitializer([stringLiteral(' 'PROCEDURE_CAT ''),stringLiteral(' 'PROCEDURE_SCHEM ''),stringLiteral(' 'PROCEDURE_NAME ''),stringLiteral(' 'COLUMN_NAME ''),stringLiteral(' 'COLUMN_TYPE ''),stringLiteral(' 'DATA_TYPE ''),stringLiteral(' 'TYPE_NAME ''),stringLiteral(' 'PRECISION ''),stringLiteral(' 'LENGTH ''),stringLiteral(' 'SCALE ''),stringLiteral(' 'RADIX ''),stringLiteral(' 'NULLABLE ''),stringLiteral(' 'REMARKS '')]))]))","declarationStatement(variables(arrayType(simpleType(simpleName('String'))),[variable('colNames',0,arrayInitializer([stringLiteral(' 'PKTABLE_CAT ''),stringLiteral(' 'PKTABLE_SCHEM ''),stringLiteral(' 'PKTABLE_NAME ''),stringLiteral(' 'PKCOLUMN_NAME ''),stringLiteral(' 'FKTABLE_CAT ''),stringLiteral(' 'FKTABLE_SCHEM ''),stringLiteral(' 'FKTABLE_NAME ''),stringLiteral(' 'FKCOLUMN_NAME ''),stringLiteral(' 'KEY_SEQ ''),stringLiteral(' 'UPDATE_RULE ''),stringLiteral(' 'DELETE_RULE ''),stringLiteral(' 'FK_NAME ''),stringLiteral(' 'PK_NAME ''),stringLiteral(' 'DEFERRABILITY '')]))]))"]}, {"filename" : "smallsql021_src.src.smallsql.database.View", "nodes" : ["declarationStatement(variables(simpleType(simpleName('StoreImpl')),[variable('store',0,methodCall(false,simpleName('StoreImpl'),'createStore',[null(),simpleName('storePage'),qualifiedName(simpleName('SQLTokenizer'),simpleName('SELECT')),simpleName('offset')]))]))"]}, {"filename" : "smallsql021_src.src.smallsql.database.TableView", "nodes" : ["catch(parameter(simpleType(simpleName('Throwable')),'e',0),block([if(infix(simpleName('raFile'),'!=',null()),try(block([expressionStatement(methodCall(false,simpleName('raFile'),'close',[]))]),[catch(parameter(simpleType(simpleName('Exception')),'e2',0),block([expressionStatement(methodCall(false,simpleName('DriverManager'),'println',[methodCall(false,simpleName('e2'),'toString',[])]))]))])),throw(methodCall(false,simpleName('SmallSQLException'),'createFromException',[simpleName('e')]))]))","infix(infix(infix(characterLiteral(' 'S ''),' < <',number('24')),'|',infix(characterLiteral(' 'Q ''),' < <',number('16'))),'|',infix(characterLiteral(' 'L ''),' < <',number('8')))","infix(infix(infix(characterLiteral(' 'S ''),' < <',number('24')),'|',infix(characterLiteral(' 'Q ''),' < <',number('16'))),'|',infix(characterLiteral(' 'L ''),' < <',number('8')))"]}, {"filename" : "smallsql021_src.src.smallsql.database.ExpressionFunctionUCase", "nodes" : ["method(arrayType(byte()),'getBytes',[],[simpleName('Exception')],block([if(methodCall(false,'isNull',[]),return(null())),return(methodCall(false,methodCall(false,'getString',[]),'getBytes',[]))]))"]}, {"filename" : "smallsql021_src.src.smallsql.database.MutableNumeric", "nodes" : ["infix(infix(arrayAccess(simpleName('value'),number('0')),'/',arrayAccess(simpleName('scaleDoubleFactor'),simpleName('scale'))),'*',simpleName('signum'))","infix(infix(arrayAccess(simpleName('value'),number('0')),'/',arrayAccess(simpleName('scaleDoubleFactor'),simpleName('scale'))),'*',simpleName('signum'))","infix(infix(qualifiedName(simpleName('value'),simpleName('length')),'==',number('1')),'&&',bracket(infix(arrayAccess(simpleName('value'),number('0')),' >',number('0'))))","infix(infix(qualifiedName(simpleName('value'),simpleName('length')),'==',number('1')),'&&',bracket(infix(arrayAccess(simpleName('value'),number('0')),' >',number('0'))))","infix(infix(qualifiedName(simpleName('value'),simpleName('length')),'==',number('1')),'&&',bracket(infix(arrayAccess(simpleName('value'),number('0')),' >',number('0'))))","infix(infix(qualifiedName(simpleName('value'),simpleName('length')),'==',number('1')),'&&',bracket(infix(arrayAccess(simpleName('value'),number('0')),' >',number('0'))))","infix(infix(qualifiedName(simpleName('value'),simpleName('length')),'==',number('2')),'&&',bracket(infix(arrayAccess(simpleName('value'),number('0')),' >',number('0'))))","infix(infix(qualifiedName(simpleName('value'),simpleName('length')),'==',number('2')),'&&',bracket(infix(arrayAccess(simpleName('value'),number('0')),' >',number('0'))))","infix(infix(qualifiedName(simpleName('value'),simpleName('length')),'==',number('2')),'&&',bracket(infix(arrayAccess(simpleName('value'),number('0')),' >',number('0'))))","infix(infix(qualifiedName(simpleName('value'),simpleName('length')),'==',number('2')),'&&',bracket(infix(arrayAccess(simpleName('value'),number('0')),' >',number('0'))))","if(infix(qualifiedName(simpleName('num'),simpleName('scale')),' <',simpleName('scale')),block([expressionStatement(methodCall(false,simpleName('num'),'setScale',[simpleName('scale')]))]),if(infix(qualifiedName(simpleName('num'),simpleName('scale')),' >',simpleName('scale')),block([expressionStatement(methodCall(false,'setScale',[qualifiedName(simpleName('num'),simpleName('scale'))]))])))","if(infix(qualifiedName(simpleName('num'),simpleName('scale')),' <',simpleName('scale')),block([expressionStatement(methodCall(false,simpleName('num'),'setScale',[simpleName('scale')]))]),if(infix(qualifiedName(simpleName('num'),simpleName('scale')),' >',simpleName('scale')),block([expressionStatement(methodCall(false,'setScale',[qualifiedName(simpleName('num'),simpleName('scale'))]))])))","return(methodCall(false,simpleName('Utils'),'double2long',[infix(infix(simpleName('temp'),'/',arrayAccess(simpleName('scaleDoubleFactor'),simpleName('scale'))),'*',simpleName('signum'))]))","return(methodCall(false,simpleName('Utils'),'double2long',[infix(infix(simpleName('temp'),'/',arrayAccess(simpleName('scaleDoubleFactor'),simpleName('scale'))),'*',simpleName('signum'))]))","declarationStatement(variables(long(),[variable('temp',0,infix(bracket(infix(bracket(cast(long(),arrayAccess(simpleName('value'),number('0')))),' < <',number('32'))),'|',bracket(infix(arrayAccess(simpleName('value'),number('1')),'&',number('0xFFFFFFFFL')))))]))","declarationStatement(variables(long(),[variable('temp',0,infix(bracket(infix(bracket(cast(long(),arrayAccess(simpleName('value'),number('0')))),' < <',number('32'))),'|',bracket(infix(arrayAccess(simpleName('value'),number('1')),'&',number('0xFFFFFFFFL')))))]))","declarationStatement(variables(long(),[variable('temp',0,infix(bracket(infix(bracket(cast(long(),arrayAccess(simpleName('value'),number('0')))),' < <',number('32'))),'|',bracket(infix(arrayAccess(simpleName('value'),number('1')),'&',number('0xFFFFFFFFL')))))]))","declarationStatement(variables(long(),[variable('temp',0,infix(bracket(infix(bracket(cast(long(),arrayAccess(simpleName('value'),number('0')))),' < <',number('32'))),'|',bracket(infix(arrayAccess(simpleName('value'),number('1')),'&',number('0xFFFFFFFFL')))))]))"]}] }